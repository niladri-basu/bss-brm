#!/usr/local/bin/perl
# 
#
#       Copyright (c) 2006 Oracle. All rights reserved.
#       This material is the confidential property of Oracle Corporation. 
#       or its subsidiaries or licensors and may be used, reproduced, stored
#       or transmitted only in accordance with a valid Oracle license or 
#       sublicense agreement.
# 
# This program takes a "cm.pinlog" and splits it into multiple files: one
# for each Process ID/Thread ID.
#
print "Split Pinlog - Version 2006.11.14\n";

my $debug = 0;
my $fname    = $ARGV[0];
if ($fname eq "-d") {
    $debug = 1;
    $fname    = $ARGV[1];
}

die "Usage $0 [-d] <input pinlog file>\n" unless $fname;


###############################################################
# MAIN CODE
###############################################################

open (IN, "< $fname") || die "Cannot open $fname: $!\n";

my $getDescLine = 0;
my $line;
my @lines = ();
my @pids_tids = ();
my $pid_tid;
my $temp_pid_tid;

#
# First we will read all of the lines into the @lines array.
# While we are doing it, check for unique PID/TID combinations and
# store those in @pids_tids array.
# When all the lines have been read, then close the input file
# Then for each entry in the @pids_tids array, open an output file
# whose name contains the pid_tid in it.  Then write all of the
# corresponding lines in the @lines array.
#

while (<IN>) {
    # First push the line into the @lines array
    push @lines, $_;
    # if the line starts with "D ", "W " or "E " then look for the pid_tid
    # Example:
    #D 06/28/00 15:41:39.046  -  CM:169.392  fm_zonemap_pol_get_lineage.c:935
    #	fm_zonemap_pol_get_lineage_hash_zone_name starting
    #
    $pid_tid = '';
    # Find the PID/TID on a "D", "W" or "E" line.
    #   the hostname is after the first "  "
    #   the program name is after the second "  "
    #   and the PID/TID is after the ":" following the program name
    if (m/^[ \t\0]*[DWE] .*  .*  .*:(.*)  /) {
        $pid_tid = $1;
        print "Found PID_TID=$pid_tid\n" if $debug;
        #
        # Check if it is unique;
        #
        foreach $temp_pid_tid (@pids_tids) {
            if ($temp_pid_tid eq $pid_tid) {
                # found a duplicate, don't need to add it.
                $pid_tid = '';
                last;          # get out of the loop
            }
        }
        #
        if ($pid_tid ne '') {
            push @pids_tids, $pid_tid;
        }
    }
}
close (IN);

# Now process all of the entries in the @pids_tids array
foreach $pid_tid (@pids_tids) {
    $fnameOut = "$fname.$pid_tid.pinlog";
    print "Creating $fnameOut\n";
    open (OUT, "> $fnameOut") || die "Cannot open $fnameOut: $!\n";

    # now read all of the lines in the @lines array and write the
    # ones corresponding to the $temp_pid_tid to the output file
    $print_this_data = 0;
    foreach $line (@lines) {
        # Find the PID/TID on a "D", "W" or "E" line.
        if ($line =~ m/^[ \t\0]*[DWE] .*  .*  .*:(.*)  /) {
            if ($pid_tid eq $1) {
                print "DEBUG: Found a match, pid_tid=$pid_tid\n" if $debug;
                $print_this_data = 1;
            }
            else {
                $print_this_data = 0;
            }
        }
        if ($print_this_data) {
            print OUT $line;
        }
    }
    close (OUT);
}
#-----------------------------------------------------------------------------------
