#version 7.5.0 1.5
ifw
{
  Active              = TRUE
  ProcessLoopTimeout  = 10
  QueueRequestTimeout = 0

  ParallelLoadManager
  {
    Active = TRUE
    NumberOfThreads = 25
  }

  Instrumentation
  {
    #-----------------------------------------------------------
    # ProbeBroker registry entries.
    #    ProbeInfoFilePath - The path that contains all probe
    #                        info files used by instrumented objects.
    #-----------------------------------------------------------
    ProbeBroker
    {
      ProbeInfoFilePath = ./instrumentation
    }

    #-----------------------------------------------------------
    # SnmpServer registry entries. (Optional)
    #    Port - The SNMP AgentX port number.
    #    ProcessDescription - The description of this process.
    #                         If not specified, the process description
    #                         has format as follows:
    #                         <<user>>:<<process_name>>::<<registry_filename>>
    #-----------------------------------------------------------
    #SnmpServer
    #{
    #  Port = < SNMP AgentX Port >
    #  ProcessDescription = ifw
    #}

    #-----------------------------------------------------------
    # HttpServer registry entries. (Optional)
    #    Port - The Http port number.
    #    StyleSheetFile - The full path name of style sheet file.
    #    PortalLogoFile - The full path name of Portal logo file.
    #-----------------------------------------------------------
    HttpServer
    {
      Port = < HTTP Port >
      StyleSheetFile = ./instrumentation/portal_omf.xsl
      PortalLogoFile = ./instrumentation/portal_omf.gif
    }
  }

  DiagnosticDataHandler   
  {
    DiagnosticFilePath = ./log
    DiagnosticFileName = diagnostic.dat      
  }

  LogMessageTable
  {
    MessageFilePath   = ./etc
    MessageFileSuffix = .msg
  }

  Semaphore
  {
    FilePath = ./semaphore
    FileName = semaphore.reg
  }

  Registry
  {
    FilePath           = ./info
    FileName           = infoALL_RERATE_SAMPLE.reg
    NiceFormatFileName = infoNiceALL_RERATE_SAMPLE.reg
    Buffer
    {
      Size = 100
    }
  }

  ProcessLog
  {
    ModuleName = LOG
    Module
    {
      ITO
      {
        FilePath          = ./log
        FileName          = processALL_RERATE_SAMPLE
        FileSuffix        = .log
        ProcessName       = ifw
        MessageGroup      = IFW
        ShowOriginator    = TRUE
      }
      Buffer
      {
        Size = 1000
      }
    }
  }

  DataPool
  {
    #-----------------------------------------------------------
    # Database Connection IntegRate
    #-----------------------------------------------------------
    Login
    {
      ModuleName = DBC
      Module
      {
        # Common
        UserName           = <IntegRate db-user> 
        PassWord           = <encrypted password> 
        DatabaseName       = <IntegRate db-sid>
        AccessLib          = oci10g72
        Connections        = 5
        #ConvertToUpperCase = False
        #UsableCheckTable   = IFW_DBVERSION
      }
    }

    #-----------------------------------------------------------
    # Database Connection Infranet
    #-----------------------------------------------------------
    LoginInfranet 
    { 
      ModuleName = DBC 
      Module 
      {
        # Common
        UserName           = <Infranet db-user> 
        PassWord           = <encrypted password> 
        DatabaseName       = <Infranet db-sid>
        AccessLib          = oci10g72
        Connections        = 5

        #ConvertToUpperCase = False
        #UsableCheckTable   = IFW_DBVERSION
      } 
    }  

    #-----------------------------------------------------------
    # Database Connection Queue
    #-----------------------------------------------------------
    LoginQueue
    {
      ModuleName = DBC
      Module
      {
        # Common
        UserName           = <Infranet db-user>
        PassWord           = <encrypted password>
        DatabaseName       = <Infranet db-sid>
        AccessLib          = oci10g72
        Connections        = 5

        #ConvertToUpperCase = False
        #UsableCheckTable   = IFW_DBVERSION
      }
    }

    #--------------------------------------------------------
    # PortalConfig Data Module
    #-----------------------------------------------------------
    PortalConfigDataModule
    {
      ModuleName = DAT_PortalConfig
      Module
      {
      # ReuseOnFailure = True
        InfranetConnection = ifw.DataPool.LoginInfranet
      }
    } 

    #-----------------------------------------------------------
    # Infranet Listener
    #-----------------------------------------------------------
    Listener 
    { 
      ModuleName = DAT_Listener 
      Module 
      { 
        InfranetConnection = ifw.DataPool.LoginQueue
        QueueName =IFW_SYNC_QUEUE
        LogEvents = TRUE
        QueueLibrary = OracleQueue

#       AckQueueName = AMT_QUEUE
        EventThreadAllocation
        {
  	   RecycleRequest = 1
#          OpenNewAcctCycle = 2
#          RecycleJob = 1
        }
#       EnableInterLeavingStatistics = false
#       ProcessAllEvents             = true
#       InterleavingReqd             = false
#       MaxNumEvents                 = 900   # suggested min. value 900
#       MinNumEvents                 = 300   # suggested min. value 300
#       CheckInterval                = 60    # suggested min. value 60 [sec]
#       MaxEventProcessTime          = 60    # suggested min. value 60 [sec]
#       MaxCDRProcessTime            = 300   # suggested min. value 300 [sec]
      } 
    }

    #-----------------------------------------------------------
    # Infranet Customer Data
    #-----------------------------------------------------------
    CustomerData
    {
      ModuleName = DAT_AccountBatch
      Module
      {
        IntegrateConnection = ifw.DataPool.Login
        InfranetConnection  = ifw.DataPool.LoginInfranet
        PortalConfigDataModule = ifw.DataPool.PortalConfigDataModule 
        LogEvents           = True
        Listener            = ifw.DataPool.Listener
        #To read System Product data from main table for rerating pipeline and from the audit table for batch pipeline processing
        #ReadSystemProductFromMain = True
      }
    }

    #-----------------------------------------------------------
    # Zone Data Module
    #-----------------------------------------------------------
    ZoneDataModule
    {
      ModuleName = DAT_Zone
      Module
      {
        ReuseOnFailure = FALSE
        Source         = DataBase
        MaxAge         = 0
        DistCalcMode   = DISC
        DataConnection = ifw.DataPool.Login
        LoadZoneDescription = False
        LoadZoneEntryName = False

        ZoneModels
        {
        }
      }
    }


    #-----------------------------------------------------------
    # USC Map Data Module
    #-----------------------------------------------------------
    USCDataModule
    {
      ModuleName = DAT_USC_Map
      Module
      {
        Source         = DataBase
        DataConnection = ifw.DataPool.Login
        LoadZoneDescription = False
        LoadZoneEntryName = False
#        PreCompiledDataDir = ./compiled_usc_data
#        NumberOfThreads = 5
#        UscGroups {  ALL_RATE }
      }
    }


    #-----------------------------------------------------------
    # Prefix Description Data Module
    #-----------------------------------------------------------
    PrefixDescDataModule
    { 
      ModuleName = DAT_PrefixDesc 
      Module 
      { 
        Source = Database 
        DataConnection = ifw.DataPool.Login
        ReuseOnFailure = false 
        CLIBase = 10 
      } 
    }
    #-----------------------------------------------------------
    # Price Data Module
    #-----------------------------------------------------------
    PriceDataModule
    {
      ModuleName = DAT_PriceModel
      Module
      {
        DataConnection = ifw.DataPool.Login
        Listener = ifw.DataPool.Listener
        LogEvents = false
      }
    }
    #-----------------------------------------------------------
    # Calendar Data Module
    #-----------------------------------------------------------
    CalendarDataModule
    {
      ModuleName = DAT_Calendar
      Module
      {
        DataConnection = ifw.DataPool.Login
      }
    }
    #-----------------------------------------------------------
    # Rateplan Data Module
    #-----------------------------------------------------------
    RateplanDataModule
    {
      ModuleName = DAT_Rateplan
      Module
      {
        DataConnection = ifw.DataPool.Login
        Listener = ifw.DataPool.Listener
        LogEvents = false
      }
    }
    #-----------------------------------------------------------
    # Time Data Module
    #-----------------------------------------------------------
    TimeDataModule
    {
      ModuleName = DAT_TimeModel
      Module
      {
        DataConnection = ifw.DataPool.Login
      }
    }
    #-----------------------------------------------------------
    # DayRate Data Module
    #-----------------------------------------------------------
    DayRateDataModule
    {
      ModuleName = DAT_Dayrate
      Module
      {
        DataConnection = ifw.DataPool.Login
      }
    }
    #-----------------------------------------------------------
    # Exchange Rate Data Module
    #-----------------------------------------------------------    
    ExchangeRateDataModule
    {
      ModuleName = DAT_ExchangeRate
      Module
      {
        DataConnection = ifw.DataPool.Login
        ReuseOnFailure = TRUE
      }
    }
    #-----------------------------------------------------------
    # Scenario Reader
    #-----------------------------------------------------------
    ScenarioReader
    {
      ModuleName = DAT_ScenarioReader
      Module
      {
        DataConnection = ifw.DataPool.Login
        Calendar       = 20000
      }
    }
    #-----------------------------------------------------------
    # Currency Data Module
    #-----------------------------------------------------------
    CurrencyDataModule
    {
      ModuleName = DAT_Currency
      Module
      {
        ReuseOnFailure = FALSE;
        InfranetConnection  = ifw.DataPool.LoginInfranet
      }
    }
    #-----------------------------------------------------------
    # Discount Model Data Module
    #-----------------------------------------------------------
    DiscountModelDataModule
    {
      ModuleName = DAT_Discount
      Module
      {
        InfranetConnection  = ifw.DataPool.LoginInfranet
        IntegrateConnection = ifw.DataPool.Login
        AccountDataModule   = ifw.DataPool.CustomerData
        PortalConfigDataModule = ifw.DataPool.PortalConfigDataModule
      }
    }
    #-----------------------------------------------------------
    # Balance Data Module
    #-----------------------------------------------------------
    BalanceDataModule
    {
      ModuleName = DAT_BalanceBatch
      Module
      {
        InfranetConnection  = ifw.DataPool.LoginInfranet
        DiscountDataModule  = ifw.DataPool.DiscountModelDataModule
        AccountDataModule   = ifw.DataPool.CustomerData
        PortalConfigDataModule = ifw.DataPool.PortalConfigDataModule
        ListenerDataModule  = ifw.DataPool.Listener
        BalanceDirectory    = ./data/balance
        ConsumptionOrder    = EXPIRE_FIRST #CREATE_FIRST/CREATE_LAST/EXPIRE_LAST
      }
    }
    #--------------------------------------------------------
    # ModelSelector Data Module
    #-----------------------------------------------------------
    ModelSelectorDataModule
    {
      ModuleName = DAT_ModelSelector
      Module
      {
	ListenerDataModule  = ifw.DataPool.Listener
        IntegrateConnection = ifw.DataPool.Login
      }
    }
    #-----------------------------------------------------------
    # ItemAssign Data Module
    #-----------------------------------------------------------
    ItemAssignDataModule
    {
      ModuleName = DAT_ItemAssign
      Module
      {
        InfranetConnection  = ifw.DataPool.LoginInfranet
        AccountDataModule  = ifw.DataPool.CustomerData
        ItemPoidReservedRangeUnitSize = 10000
      }
    }
    #--------------------------------------------------------
    # Recycling Data
    #-----------------------------------------------------------
    RecyclingData
    {
      ModuleName = DAT_Recycle
      Module
      {
        Listener = ifw.DataPool.Listener
        LogEvents = True
        ControlPath = ./database/Oracle/Scripts/Suspense
        ParameterFile = parameter.isc
        QueueFileName       = RecycleJobIds_rerating.dat
        QueueFilePath       = ./data
        ProcessCount        = 50
        PipelineCategory    = ReratingPipeline
      }
    }
  } # end of data pool
  
  TransactionIdController
  { 
    Source = File
    
    Generator
    {
      FileName = ./tam/TransactionIDsALL_RERATE_SAMPLE.dat
      Increment = 200
    }
  }

  SequencerPool
  {
  }

  EventHandler 
  { 
    ModuleName = EVT 
    Module 
    { 
      Events 
      { 
        ifw.Pipelines.ALL_BCKOUT.Input.InputModule.Module.InputStream.Module
        { 
          # EVT_INPUT_DIR_EMPTY = ./start_rerate.sh
        } 
      } 

      Buffer 
      { 
        Size = 100 
      } 
    } 
  } 

  Pipelines
  {
    #---------------------------------------------------
    #	Pre Process pipeline used by Suspense management 
    #---------------------------------------------------
    PRE_PROCESS
    {
      Active = True
      RejectStream = DevNull
      TransactionManager
      {
        RedoEnabled = True #False
        SingleTransaction = False
        WriteToLogEnabled = True
        BinaryLogFileName = ./tam/binaryLogFilePRE_PROCESS.dat
      }
      #---------------------------------
      EdrFactory
      {
        DataConnection = ifw.DataPool.Login
        Description = ./formatDesc/Portal/containerDesc.dsc
        UsageStatistic = ./log/statistic/edrStatisticPRE_PROCESS.txt
        EdrVersionDataConnection = ifw.DataPool.LoginInfranet
      }
      #---------------------------------
      DataDescription
      {
        Standard
        {
          ModuleName = Standard
          Module
          {
            StreamFormats
            {
              SOL42_SUSPENSE = ./formatDesc/Formats/Solution42/SOL42_V670_REL.dsc
              SIMPLESAMPLE = ./formatDesc/Formats/Sample/SIMPLESAMPLE_v1.dsc
            }
            InputMapping
            {
              SIMPLESAMPLE = ./formatDesc/Formats/Sample/SIMPLESAMPLE_v1_InMap.dsc
            }
            OutputMapping
            {
              EDR_OUTPUT = ./formatDesc/Formats/Solution42/SOL42_V670_REL_OutMap.dsc
            }
          }
        }
      }


      #---------------------------------
      # Pipeline Log Section
      #---------------------------------
      PipelineLog
      {
        ModuleName = LOG
        Module
        {
          ITO
          {
            FilePath = ./log/pipeline
            FileName = pipeline_PRE_PROCESS.log
            ProcessName = ifw
            MessageGroup = IFW
            ShowOriginator = True
            SuppressErrors
            {
              ERR_SPEC_VERSION_INVALID
              ERR_RELEASE_VERSION_INVALID

            }
          }

          Buffer
          {
            Size = 1000
          }
        }
       }# Pipeline log
     InputBuffer
      {
        Size = 100
      }

      OutputBuffer
      {
        Size = 100
      }

      #---------------------------------
      # Input section
      #---------------------------------
      Input
      {
        UnitsPerTransaction = 1

        InputModule
        {
          ModuleName = INP_GenericStream
          Module
          {
            DefaultOutput = EdrOutput
            Grammar = ./formatDesc/Formats/Sample/SIMPLESAMPLE_v1_InGrammar.dsc

            InputStream
            {
              ModuleName = EXT_InFileManager
              Module
              {
                InputPath = ./data/in
                InputPrefix = test
                InputSuffix     = .edr

                DonePath = ./data/done
                DonePrefix = test_PREPROCESS
                DoneSuffix = .done

                ErrorPath = ./data/error
                ErrorPrefix = test_PREPROCESS
                ErrorSuffix = .err

                TempPrefix = tmp_PREPROCESS
                Replace = True
                InputDirEmptyTimeout = 60
              }
            }
          }
        }
      }

      #---------------------------------
      # Functions Section
      #---------------------------------
      Functions
      {
        Standard
        {
          FunctionPool
          {
          } # end FunctionPool
        } # end Standard
      } # end Functions

      #---------------------------------
      # Output Section
      #---------------------------------
      Output
      {
        ChargePrecision = 3
        WriteDefaultEdr = False
        SpecificationVersionNumber = 2
        SequenceGeneration = Unit
        #Unit - Transaction

        MaxErrorRates
        {
          INF_EDR_REJECTED = 90
          ERR_CUST_NOT_FOUND = 55
          ERR_CHARGED_ZONE_NOT_FOUND = 55
        }

        #---------------------------------
        OutputCollection
        {
        #----------------------------------------------
        # The DevNull stream
        #---------------------------------------------------
        DevNull
        {
          ModuleName = OUT_DevNull
          Module
          {
        }
        } # end of DevNull

        #-----------------------------
        EdrOutput
        {
          ModuleName = OUT_GenericStream
          ProcessType = PREPROCESS_PIPELINE
          Module
          {
            Grammar = ./formatDesc/Formats/Solution42/SOL42_V670_REL_OutGrammar.dsc
            DeleteEmptyStream = True
            OutputStream
            {
              ModuleName = EXT_OutFileManager
              Module
              {
                OutputPath = ./data/edr
                OutputPrefix = test
                OutputSuffix = .edr
                TempPrefix = tmp_PREPROCESS
                TempDataPath = ./data/edr
                TempDataPrefix = new.tmp.
                TempDataSuffix = .edr
                Replace = True
                AppendSequenceNumber = False
              }
            }
          }
        } # end of EdrOutput
        } # end of OutputCollection

        #-------------------------------
        OutputLog
        {
          FilePath = ./log/stream
          FileName = stream
          FilePrefix = log_
          FileSuffix = .log
          SuppressErrors
          {
            ERR_SPEC_VERSION_INVALID
            ERR_RELEASE_VERSION_INVALID
          }
        } # end of OutputLog

        #-------------------------------
        EdrTraceEnabled = False
        EdrTrace
        {
            TraceLog
            {
                 FilePath   = ./log/edrLog
                 FileName   = edrTraceLog
                 FilePrefix = log_
                 FileSuffix = .log
            }

            TraceStartPoint =  Input
            TraceEndPoint   = Output

        } # END EdrTrace

      } # END Output
    } # END PreProcessPipeline

    #-----------------------------------------------------------------
    #	Pre Recycle pipeline used by Suspense management for Recycling
    #-----------------------------------------------------------------
    PRE_RECYCLE
    {
      Active                      = TRUE
      MobileCountryCode           = 262
      NationalAccessCode          = 0
      InternationalAccessCode     = 00
      InternationalAccessCodeSign = +
      NetworkDestinationCode      = 172
      RejectStream                = DevNull
      TransactionManager
      {
        RedoEnabled       = True #False
        SingleTransaction = False
        WriteToLogEnabled = True
        BinaryLogFileName = ./tam/binaryLogFilePRE_RECYCLE.dat
      }
      EdrFactory
      {
        DataConnection = ifw.DataPool.Login
        Description = ./formatDesc/Portal/containerDesc.dsc
        UsageStatistic = ./data/log/edrStatisticPRE_RECYCLE.txt
        EdrVersionDataConnection = ifw.DataPool.LoginInfranet
      }
      DataDescription
      {
        Standard
        {
          ModuleName = Standard
          Module
          {
            StreamFormats
            {
              EDR_OUTPUT = ./formatDesc/Formats/Solution42/SOL42_V670_REL.dsc
            }
            InputMapping
            {
            }
            OutputMapping
            {
              EDR_OUTPUT = ./formatDesc/Formats/Solution42/SOL42_V670_REL_OutMap.dsc
            }
          }
        }
      } # end of DataDescription
      PipelineLog
      {
        ModuleName = LOG
        Module
        {
          ITO
          {
            FilePath = ./log/pipeline
            FileName = pipeline_PRE_RECYCLE.log
            ProcessName = ifw
            MessageGroup = IFW
            ShowOriginator = TRUE
          }
          Buffer
          {
            Size = 500
          }
        }
      } # end of PipelineLog
      InputBuffer
      {
        BlockTransfer = TRUE
        Size = 2000
        BlockSize = 500
      }
      OutputBuffer
      {
        BlockTransfer = TRUE
        Size = 2000
        BlockSize = 500
      }
      #-------------------------------------------------------------------
      # Input section
      Input
      {
        UnitsPerTransaction = 1
        InputModule
        {
          ModuleName  = INP_Recycle
          Module
          {
            DefaultOutput       = PreRecycleOutput
            RecyclingDataModule = ifw.DataPool.RecyclingData
            InfranetConnection = ifw.DataPool.LoginInfranet
            InputStream
            {
              ModuleName = EXT_InEasyDB
              Module
              {
                DataConnection        = ifw.DataPool.LoginInfranet
                ControlPath           = ./database/Oracle/Scripts/Suspense
                FileName              = DB
                FileNameExtension     = true
                InputPrefix           = sol42_
                InputSuffix           = .dat
                FieldDelimiter        = \t
                RecordDelimiter       = \n
                ParameterFile         = parameter.isc
                SqlHeader             = RecycleHeader.sql
                SqlDetail             = StdRecycleDetail.sql
                Replace               = true
                SynchronizeWithOutput = true
                NumberOfRows          = 1000
              }
            } # end of InputStream
          }
        } # end of InputModule
      } # end of Input

      #---------------------------------------------------------------
      # Function section
      #-----------------------------------------------------------------
      Functions
      {
        PreProcessing
        {
          FunctionPool
          {
            #--------------------------------------------------
            # IRule to split EDR into original pipelines
            #--------------------------------------------------
            PipelineSplit
            {
              ModuleName = FCT_IRules
              Module
              {
                Active = TRUE
                Source = File
                Rules
                {
                }
                Descriptions
                {
                  PipelineSplit = ./iScriptLib/iScriptLib_Suspense/IRL_PipelineSplitting.irl
                }
              }
            }
          } # END FunctionPool
        } # END PreProcessing
      } # END Functions

      #--------------------------------------------------
      # Output Section
      #--------------------------------------------------
      Output
      {
        WriteDefaultEdr            = False
        DeleteEmptyFile            = True

        MaxErrorRates
        {
        }
        OutputCollection
        {
          #----------------------------------------------------------------
          # The DevNull stream
          #---------------------------------------------------------------
          DevNull
          {
            ModuleName = OUT_DevNull
            Module
            {
            }
          } # end of DevNull

          #--------------------------------------------------------------------
          # The EDR output stream
          #--------------------------------------------------------------------
          PreRecycleOutput
          {
            ModuleName = OUT_GenericStream
            ProcessType = RECYCLING_PIPELINE
            EventType = /recycle_suspended_usage
            Module
            {
              Grammar = ./formatDesc/Formats/Solution42/SOL42_V670_REL_OutGrammar.dsc
              DeleteEmptyStream         = True
              OutputStream
              {
                ModuleName = EXT_OutFileManager
                Module
                {
                  OutputPath    = ./data/edr
                  OutputPrefix  = test_recycle
                  OutputSuffix  = .edr
                  TempPrefix    = tmp_PRERECYCLE
                  TempDataPath  = ./data/edr
                  TempDataPrefix = recycle.tmp.
                  TempDataSuffix = .edr
                  Replace = TRUE
                }
              }
            }
          } # end of PreRecycleOutput
        }

        OutputLog
        {
          FilePath        = ./log/stream
          FileName        = stream
          FilePrefix      = Stream_
          FileSuffix      = .log

          SuppressErrors
          {
            ERR_SPEC_VERSION_INVALID
            ERR_RELEASE_VERSION_INVALID
          }
        }

        SequenceGeneration = Unit

        #-------------------------------
        EdrTraceEnabled = False
        EdrTrace
        {
            TraceLog
            {
                 FilePath   = ./log/edrLog
                 FileName   = edrTraceLog
                 FilePrefix = log_
                 FileSuffix = .log
            }

            TraceStartPoint =  Input
            TraceEndPoint   = Output

        } # END EdrTrace


      } # END Output
    } # END PreRecyclePipeline

    #---------------------------------------------
    # ALLRATE Pipeline 
    #---------------------------------------------
    ALL_RATE
    {
      Active                      = TRUE
      
      CountryCode                 = 49
      MobileCountryCode           = 262
      NationalAccessCode          = 0
      InternationalAccessCode     = 00
      InternationalAccessCodeSign = +
      NetworkDestinationCode      = 172
      RejectStream                = SuspenseCreateOutput
      
      TransactionManager
      {
        RedoEnabled = True #False
        SingleTransaction = False
        WriteToLogEnabled = True
        BinaryLogFileName = ./tam/binaryLogFileALL_RERATE_SAMPLE.dat
      }
      
      EdrFactory 
      { 
        DataConnection = ifw.DataPool.Login 
        Description = ./formatDesc/Portal/containerDesc.dsc
        UsageStatistic = ./log/edrStatisticALL_RERATE_SAMPLE.txt 
      }

      DataDescription
      {
        Standard
        {
          ModuleName = Standard
          Module
          {
            StreamFormats
            {
  	      SOL42_FORINPUT =./formatDesc/Formats/Solution42/SOL42_V670_REL_FORINPUT.dsc
              EVENT_LOADER = ./formatDesc/Formats/Solution42/V670_EVENT_LOADER.dsc
              SUSPENSE_CREATE_OUTPUT = ./formatDesc/Formats/SuspenseHandling/SuspendedUsageCreation.dsc
              SUSPENSE_UPDATE_OUTPUT = ./formatDesc/Formats/SuspenseHandling/SuspendedUsageUpdate.dsc
            }

            InputMapping
            {
	      SOL42 = ./formatDesc/Formats/Solution42/SOL42_V670_REL_InMap.dsc
            }

            OutputMapping
            {
              EVENT_LOADER = ./formatDesc/Formats/Solution42/V670_EVENT_LOADER_OutMap.dsc
              SUSPENSE_CREATE_OUTPUT = ./formatDesc/Formats/SuspenseHandling/SuspendedUsageCreationMapping.dsc
              SUSPENSE_UPDATE_OUTPUT = ./formatDesc/Formats/SuspenseHandling/SuspendedUsageUpdateMapping.dsc
            }
          }
        }
      } # end of DataDescription

      PipelineLog 
      { 
        ModuleName = LOG
        Module 
        { 
          ITO 
          { 
            FilePath = ./log/pipeline
            FileName = pipeline.log
            ProcessName = ifw
            MessageGroup = IFW
            ShowOriginator = TRUE
          }

          Buffer 
          { 
            Size = 500
          } 
        } 
      } # end of PipelineLog


      InputBuffer
      {
        BlockTransfer = TRUE
        Size = 2000
        BlockSize = 500
      }

      OutputBuffer
      {
        BlockTransfer = TRUE
        Size = 2000
        BlockSize = 500
      }
      
      #------------------------------------------------------------------------
      # Input section
      #------------------------------------------------------------------------
      Input
      {
        UnitsPerTransaction = 1

        InputModule
        {
          ModuleName  = INP_GenericStream
          Module
          {
            DefaultOutput = TELOutput
            Grammar       = ./formatDesc/Formats/Solution42/SOL42_V670_REL_InGrammar.dsc

            InputStream
            {
              ModuleName = EXT_InFileManager
              Module
              {
                InputDirEmptyTimeout = 10

                InputPath   = ./data/edr
                InputPrefix = test
                InputSuffix = .edr
 
                DonePath    = ./data/done
                DonePrefix  = test
                DoneSuffix  = .done
           
                ErrorPath   = ./data/error
                ErrorPrefix = test
                ErrorSuffix = .err

                TempPrefix  = tmp
  
                Replace     = TRUE
              }
            } # end of InputStream
          }
        } # end of InputModule
      } # end of Input

      
      #------------------------------------------------------------------------
      # Function section
      #------------------------------------------------------------------------
      Functions 
      {
        PreProcessing
        {
          FunctionPool
          {
 
            #--------------------------------------------------
            # PreSuspense FCT
            #--------------------------------------------------
            PreSuspense 
            {
              ModuleName = FCT_PreSuspense
              Module
              {
                Active = TRUE
              }
            }

            #--------------------------------------------------
            # Discarding (of events)
            #--------------------------------------------------
            EventDiscarding
            {
              ModuleName = FCT_Discard
              Module
              {
                Active = TRUE
                DataConnection = ifw.DataPool.Login
                Function       = Discard
                StreamName     = DevNull
              }
            }

            #--------------------------------------------------
            # Duplicate Check
            #--------------------------------------------------
            DuplicateCheck
            {
              ModuleName = FCT_DuplicateCheck
              Module
              {
                Active = FALSE
                Path = ./data/dup
                FileName = calls.duplicate
                StreamName = DuplicateOutput
                BufferLimit = 20020601
                # StoreLimit = 20020601
                SearchKey = DETAIL.A_NUMBER

                # Data is organized on the DETAIL.CHARGING_START_TIMESTAMP and
                # the configurable search key. There is no need to specify these
                # fields again.
                Fields
                {
                  1 = DETAIL.BASIC_SERVICE
                  2 = DETAIL.B_NUMBER
                }
              }
            }

            #--------------------------------------------------
            # Usage Class Mapping
            #--------------------------------------------------
            UsageClassMap
            {
              ModuleName = FCT_UsageClassMap 
              Module 
              { 
                Active              = TRUE
                DataConnection      = ifw.DataPool.Login
                OverwriteUsageClass = False 
                MapGroup            = ALL_RATE
                #OptimizeFor        = Memory 
              } 
            }

            #--------------------------------------------------
            # Service Code Mapping
            #--------------------------------------------------
            ServiceCodeMap 
            { 
              ModuleName = FCT_ServiceCodeMap
              Module 
              { 
                Active             = TRUE
                DataConnection     = ifw.DataPool.Login
                MapGroup           = ALL_RATE
              } 
            } 

            #--------------------------------------------------
            # Prefix Description
            #--------------------------------------------------
            PrefixDesc
            {
              ModuleName = FCT_PrefixDesc
              Module
              {
                Active = TRUE
                PrefixDataModule = ifw.DataPool.PrefixDescDataModule
              }
            }              

            #--------------------------------------------------
            # Infranet Customer
            #--------------------------------------------------
            CustomerSearch 
            { 
              ModuleName = FCT_Account
              Module 
              { 
                Active         = TRUE
                DataModule     = ifw.DataPool.CustomerData
                #DisableRatingProductCheck  = False
              }
            } 

            #--------------------------------------------------
            # Profile analysis
            #--------------------------------------------------
            ProfileAnalyzer
            {
              ModuleName = FCT_IScript
              Module
              {
                Active = False
                Source = FILE
                Scripts
                {
                  ProfileAnalyzer
                  {
                    ProfileName = FRIENDS_FAMILY
                    LabelSeparator = ,
                    FileName = ./iScriptLib/iScriptLib_Standard/ISC_ProfileAnalyzer.isc
                  }
                }
              }
            }

            #--------------------------------------------------
            # Usage Type Mapping
            #--------------------------------------------------              
            UsageType
            { 
               ModuleName = FCT_IRules 
               Module 
               { 
                 Active = TRUE
                 Source = File 
                 Descriptions 
                 { 
                   UsageTypeDetermination = ./iScriptLib/iScriptLib_Standard/IRL_UsageType.irl
                 }
               } 
            }              

            #--------------------------------------------------
            # FCT_Filter_Set registry entry fields.
            #--------------------------------------------------
            # Filter_Set FCT
            #---------------------------
            Filter_Set
            {
              ModuleName                = FCT_Filter_Set
              Module
              {
                Active                   = False
                DiscountDataModule       = ifw.DataPool.DiscountModelDataModule
                AccountDataModule        = ifw.DataPool.CustomerData
                InfranetConnection       = ifw.DataPool.LoginInfranet
              }
            }

            #--------------------------------------------------
            # Get the Least Cost As Per Market Segment and the
            # the product priority for each edr.
            #--------------------------------------------------
            LeastCostPerEDR
            {
               ModuleName = FCT_IRules
               Module
               {
                 Active = False
                 Source = File
                 Descriptions
                 {
                   LeastCostCheck= ./iScriptLib/iScriptLib_Standard/IRL_LeastCostPerEDR.irl
                 }
               }
            }

            #--------------------------------------------------
            # Get the Promotion Saving as per the product attributes
            #--------------------------------------------------
            PromotionalSavingPerEDR
            {
               ModuleName = FCT_IRules
               Module
               {
                 Active = False
                 Source = File
                 Descriptions
                 {
                   PromotionalSaving = ./iScriptLib/iScriptLib_Standard/IRL_PromotionalSavingPerEDR.irl
                 }
               }
            }

            #--------------------------------------------------
            # Customer Individual Rating
            #--------------------------------------------------
            CustomerRating
            { 
              ModuleName = FCT_CustomerRating 
              Module 
              { 
                Active            = TRUE
                Mode              = CUSTOMER 
                DataConnection    = ifw.DataPool.Login 
                DefaultRateplan   = Standard
                LeastCostRating   = False
                PromotionalSaving = False
              } 
            }

##----------------------------------------------------------------------
##         Deprecated because of the introduction of EDR Trace
##----------------------------------------------------------------------
##
##          #--------------------------------------------------
##          # Edr Dump to Disk
##          #--------------------------------------------------
##          EdrDump_pre
##          {
##            ModuleName = FCT_EdrDump
##            Module
##            {
##              Active = False
##              FileName = ./data/dump/ALL_RATE_Dump_pre.txt
##            }
##          }
##----------------------------------------------------------------------

            #--------------------------------------------------
            # Pre-Rating (Zoning)
            #--------------------------------------------------
            PreRatingZone
            {
              ModuleName = FCT_PreRating
              Module
              {
                Active = TRUE
                RateplanDataModule = ifw.DataPool.RateplanDataModule
                ZoneDataModule = ifw.DataPool.ZoneDataModule
              }
            }


            #--------------------------------------------------
            # Access Point Name Mapping (after zoning)
            #--------------------------------------------------              
            APNMap
            {
              ModuleName = FCT_APN_Map 
              Module 
              { 
                Active         = TRUE
                DataConnection = ifw.DataPool.Login
                APNGroup {} 
              }
            } 

            #--------------------------------------------------
            # Usage Scenario Mapping
            #--------------------------------------------------
            UsageScenarioMap
            {
              ModuleName = FCT_USC_Map
              Module
              {
                Active = TRUE
                DataModule = ifw.DataPool.USCDataModule
                DefaultUSCGroup = ALL_RATE
              }
            }


            #--------------------------------------------------
            # Rate Service Class Mapping
            #--------------------------------------------------              
            RateServiceClassMap 
            { 
              ModuleName = FCT_RSC_Map 
              Module 
              {
                Active          = FALSE 
                DataConnection  = ifw.DataPool.Login
                DefaultRscGroup = ALL_RATE
              } 
            }
          }
        } # END of PreProcessing

        Buffer1
        {
          BlockTransfer = TRUE
          Size = 2000
          BlockSize = 500
        }

        Rating
        {
          FunctionPool
          {
            # Main Rating (Pricing)
            #--------------------------------------------------
            MainRating
            {
              ModuleName = FCT_MainRating
              Module
              {
                Active                  = TRUE
                RateplanDataModule      = ifw.DataPool.RateplanDataModule
                CalendarDataModule      = ifw.DataPool.CalendarDataModule
                TimeDataModule          = ifw.DataPool.TimeDataModule
                PriceDataModule         = ifw.DataPool.PriceDataModule
                CurrencyDataModule      = ifw.DataPool.CurrencyDataModule
                ModelSelectorDataModule = ifw.DataPool.ModelSelectorDataModule
              }
            }

            #--------------------------------------------------
            # Special Dayrates
            #--------------------------------------------------
            SpecialDayRate
            {
              ModuleName = FCT_Dayrate
              Module
              {
                Active = TRUE
                DayrateDataModule = ifw.DataPool.DayRateDataModule
              }
            }

            #--------------------------------------------------
            # Rate Adjustment
            #--------------------------------------------------
            RateAdjustment
            {
              ModuleName = FCT_RateAdjust
              Module
              {
                Active         = TRUE
                Source         = Database
                DataConnection = ifw.DataPool.Login
              }
            }

            #--------------------------------------------------
            # Rounding (Rating)
            #--------------------------------------------------
            Round_Rating
            {
              ModuleName = FCT_Rounding
              Module
              {
                Active             = TRUE
                CurrencyDataModule = ifw.DataPool.CurrencyDataModule
                Mode               = RATING
              }
            } 
 

            #--------------------------------------------------
            # Discount Analysis
            #--------------------------------------------------
            DiscountAnalysisModule
            {
              ModuleName = FCT_DiscountAnalysis
              Module
              {
                Active                   = TRUE
                DiscountModelDataModule  = ifw.DataPool.DiscountModelDataModule
                ModelSelectorDataModule  = ifw.DataPool.ModelSelectorDataModule
                Filter_SetIsActive = False
              }
            }

            #--------------------------------------------------
            # Discounting
            #--------------------------------------------------
            DiscountModule
            {
              ModuleName = FCT_Discount
              Module
              {
                Active                   = TRUE
                DiscountDataModule       = ifw.DataPool.DiscountModelDataModule
                BalanceDataModule        = ifw.DataPool.BalanceDataModule
                AccountDataModule        = ifw.DataPool.CustomerData
                CurrencyDataModule       = ifw.DataPool.CurrencyDataModule
                DiscountMoreThanPossible = False 
              } 
            }

	    #-------------------------------------------------
            # Least Cost Rating
            #-------------------------------------------------
            LeastCostRating
            {
              ModuleName = FCT_IScript
              Module
              {
                Active = False
                Source = FILE
                Scripts
                {
                  LeastCostRating
                  {
                    Resource = Saving_Resource_Id
                    Resource_id = 1000096
                    FileName =  ./iScriptLib/iScriptLib_Standard/ISC_LeastCost.isc
                  }
                }
              }
            }

            #--------------------------------------------------
            # Rounding (Discounting)
            #--------------------------------------------------
            Round_Discounting
            {
              ModuleName = FCT_Rounding
              Module
              {
                Active             = TRUE
                CurrencyDataModule = ifw.DataPool.CurrencyDataModule
                Mode               = Discounting
              }
            }

            #--------------------------------------------------
            # ApplyBalance
            #--------------------------------------------------
            ApolloApplyBalanceModule
            {
              ModuleName = FCT_ApplyBalance
              Module
              {
                Active                       = TRUE
                DiscountDataModule           = ifw.DataPool.DiscountModelDataModule
                BalanceDataModule            = ifw.DataPool.BalanceDataModule
                DiscountFunctionalModule     = Functions.Rating.FunctionPool.DiscountModule  
                PortalConfigDataModule       = ifw.DataPool.PortalConfigDataModule
                #NumberOfNotificationLimit   = 1000
                #NotificationOutputDirectory = ./data/out/notifybalancebreach
                #NotificationOutputPrefix    = balancebreach_
              }
            }

            #--------------------------------------------------
            # Exchange Rate Calculation
            #--------------------------------------------------              
            ExchangeRate
            {
              ModuleName  = FCT_ExchangeRate
              Module
              {
                Active                 = FALSE
                ExchangeRateDataModule = ifw.DataPool.ExchangeRateDataModule
                RatingDateBilling      = CDR
                RatingDateHome         = SYSTEM
                HomeCurrency           = EUR
                ErrorMessages          = FALSE
              }
            }

            #--------------------------------------------------
            # Post-Rating
            #--------------------------------------------------
            PostRating 
            { 
              ModuleName = FCT_IScript 
              Module 
              { 
                Active = FALSE
                Source = FILE 
                Scripts 
                { 
                  PostRating 
                  { 
                    FileName =  ./iScriptLib/iScriptLib_Standard/ISC_PostRating.isc

                    RetailRecordType = 981       # customer individual charge breakdown record
                    RetailResource = EUR 
                    RetailPricemodelType = S 
                    RetailCurrencyType = R       # rating currency

                    WholesaleRecordType = 990    # interconnect charge breakdown record
                    WholesaleResource = EUR
                    WholesalePricemodelType = A
                    WholesaleCurrencyType = H    # home currency
                  } 
                } 
              } 
            }
            #--------------------------------------------------
            # ItemAssign PlugIn
            #--------------------------------------------------
            FlexibleItemAssignment
            {
              ModuleName = FCT_ItemAssign
              Module
              {
                 Active     = TRUE
                 DataModule     = ifw.DataPool.ItemAssignDataModule
              }
            }

            #----------------------------------------------------------------
            # Add Infranet Billing Record (plugin version)
            #----------------------------------------------------------------
            InfranetBillingRecord
            {
              ModuleName = FCT_BillingRecord
              Module
              {
                Active = TRUE
                CurrencyType = R
                CurrencyDataModule = ifw.DataPool.CurrencyDataModule
                AccountDataModule  = ifw.DataPool.CustomerData
                ItemAssignDataModule  = ifw.DataPool.ItemAssignDataModule
                BalanceDataModule     = ifw.DataPool.BalanceDataModule
                PortalConfigDataModule   = ifw.DataPool.PortalConfigDataModule
                # indicating it's rating or re-rating, default is rating
                RatingPipeline = TRUE 
              }
            }

            #--------------------------------------------------
            # Aggregation
            #--------------------------------------------------
            #AggreGate
            #{
            #  ModuleName = FCT_AggreGate
            #  Module
            #  {
            #    Active                    = FALSE
            #    ScenarioReaderDataModule  = ifw.DataPool.ScenarioReader
            #  
            #    Scenarios
            #    {
            #      USAGE_STAT
            #      {
            #        TableName       = USAGE_STAT
            #        Threshold       = 100000
            #        TempDir        = ./data/aggregate/temp
            #        DoneDir        = ./data/aggregate/result
            #        CtlDir         = ./data/aggregate/result
            #        FieldDelimiter  = |
            #        FlushMode       = 0
            #      }
            #    }
            #    ResultFile
            #    {
            #      IncludeFormat  = FALSE
            #      TempSuffix     = .tmp
            #      DoneSuffix     = .dat
            #      WriteEmptyFile = FALSE
            #    }
            #    ControlFile
            #    {
            #      IncludeFormat  = FALSE
            #      Suffix         = .ctl
            #      DataFilePath   = TRUE
            #    }
            #  }
            #}              

            #--------------------------------------------------
            # Split Output per ServiceCode
            #--------------------------------------------------              
            ServiceOutputSplit
            {
              ModuleName = FCT_IRules
              Module
              {
                Active = TRUE
                Source = File
                Rules
                {
                }
                Descriptions
                {
                  ServiceCodeSplit = ./iScriptLib/iScriptLib_Standard/IRL_EventTypeSplitting.irl
                }
              }
            }

            #--------------------------------------------------
            # Split Output per ObjectCacheType
            #--------------------------------------------------
            ObjectCacheTypeOutputSplit
            {
              ModuleName = FCT_IScript
              Module
              {
                Active = TRUE
                Source = File
                Scripts
                {
                  ObjectCacheTypeOutputSplit
                  {
                    FileName = ./iScriptLib/iScriptLib_Standard/ISC_ObjectCacheTypeOutputSplitter.isc
                  }
                }
              }
            }

            #--------------------------------------------------
            # Rejection
            #--------------------------------------------------
            Rejection
            {
              ModuleName = FCT_Reject
              Module
              {
                Active          = True 
                NotifyOnReject  = True 
                UseRejectStream = True 
                StreamMap {}
              }
            }

            #--------------------------------------------------
            # Suspense FCT 
            #--------------------------------------------------
            Suspense
            {
              ModuleName = FCT_Suspense
              Module
              {
                Active = True
                SuspenseCreateStream = SuspenseCreateOutput
                SuspenseUpdateStream = SuspenseUpdateOutput
                DataConnection       = ifw.DataPool.LoginInfranet
                LogTestResults       = False
                PipelineCategory     = ReratingPipeline
                RecycleLog
                {
                }
              }
            }

##----------------------------------------------------------------------
##         Deprecated because of the introduction of EDR Trace
##----------------------------------------------------------------------
##
##          #--------------------------------------------------
##          # EDR Dump
##          #--------------------------------------------------
##          EdrDump_post
##          {
##            ModuleName = FCT_EdrDump
##            Module
##            {
##              Active = False
##              FileName = ./data/dump/ALL_RATE_Dump_post.txt
##            }
##          }
##----------------------------------------------------------------------


          } # END FunctionPool
        } # END Rating 
      } # END Functions

      #--------------------------------------------------
      # Output Section
      #--------------------------------------------------
      Output
      {
        WriteDefaultEdr            = False

        MaxErrorRates
        {
        }

        #-------------------------------------------
        # Multithreaded writing. This is recommended
        # when EDRs are associated with multiple
        # output streams.
        #------------------------------------------
        MultiThreading
        {
           Active = False      # Defaults to False
           NumberOfThreads = 1 # Number of threads spawned. Defaults to 1
           BatchSize = 0       # The number of EDRs cached before sent for writing. Defaults to 0
        }

        OutputCollection
        {
          #--------------------------------------------------------------------
          # The DevNull stream
          #--------------------------------------------------------------------
          DevNull
          {
            ModuleName = OUT_DevNull
            Module
            { 
            } 
          } # end of DevNull

          #--------------------------------------------------------------------
          # Output stream for duplicate events
          #--------------------------------------------------------------------
          DuplicateOutput
          {
            ModuleName = OUT_Reject
            Module
            {
              DeleteEmptyStream = TRUE # defaults to true 
              OutputStream
              {
                ModuleName = EXT_OutFileManager
                Module
                {
                  OutputPath = ./data/reject
                  OutputPrefix = test
                  OutputSuffix = .dup
                  TempPrefix   = tmp

                  TempDataPath    = ./data/reject
                  TempDataPrefix  = dup.tmp.
                  TempDataSuffix  = .data

                  Replace = TRUE
                }
              }
            } 
          } # end of DuplicateOutput          

          #--------------------------------------------------------------------
          # The /service/gsm/telephony output stream
          #--------------------------------------------------------------------
          TELOutput
          {
            ModuleName = OUT_GenericStream

            ProcessType = RATING_PIPELINE
            EventType = /event/delayed/session/telco/gsm

            Module
            {
              Grammar = ./formatDesc/Formats/Solution42/V670_EVENT_LOADER_OutGrammar.dsc
              DeleteEmptyStream = True #defaults to true

              OutputStream
              {
                ModuleName = EXT_OutFileManager
                Module
                {
                  OutputPath = ./data/out/gsm/telephony
                  OutputPrefix = test_TEL
                  OutputSuffix = .out
                  TempPrefix   = .                  

                  TempDataPath    = ./data/out/gsm/telephony
                  TempDataPrefix  = tel.tmp.
                  TempDataSuffix  = .data

                  Replace = TRUE
                }
              }
            }
          } # end of TELOutput

          CONV_TELOutput
          {
            ModuleName = OUT_GenericStream

            ProcessType = RATING_PIPELINE
            EventType = /event/delayed/session/telco/gsm
            ObjectCacheType = CONVERGENT

            Module
            {
              Grammar = ./formatDesc/Formats/Solution42/V670_EVENT_LOADER_OutGrammar.dsc
              DeleteEmptyStream = True #defaults to true

              OutputStream
              {
                ModuleName = EXT_OutFileManager
                Module
                {
                  OutputPath = ./data/out/gsm/telephony
                  OutputPrefix = test_CONV_TEL
                  OutputSuffix = .out
                  TempPrefix   = .

                  TempDataPath    = ./data/out/gsm/telephony
                  TempDataPrefix  = CONV_tel.tmp.
                  TempDataSuffix  = .data

                  Replace = TRUE
                }
              }
            }
          } # end of CONV_TELOutput
          
          #--------------------------------------------------------------------
          # The /service/ip/gprs output stream
          #--------------------------------------------------------------------
          GPRSIPOutput
          {
            ModuleName = OUT_GenericStream

            ProcessType = RATING_PIPELINE
            EventType = /event/delayed/session/gprs

            Module
            {
              Grammar = ./formatDesc/Formats/Solution42/V670_EVENT_LOADER_OutGrammar.dsc
              DeleteEmptyStream = True # defaults to TRUE

              OutputStream
              {
                ModuleName = EXT_OutFileManager
                Module
                {
                  OutputPath = ./data/out/gprs
                  OutputPrefix = test_GPRSIP
                  OutputSuffix = .out
                  TempPrefix   = .

                  TempDataPath    = ./data/out/gprs
                  TempDataPrefix  = gprs_ip.tmp.
                  TempDataSuffix  = .data

                  Replace = TRUE
                }
              }
            }
          } # end of GPRSIPOutput

          CONV_GPRSIPOutput
          {
            ModuleName = OUT_GenericStream

            ProcessType = RATING_PIPELINE
            EventType = /event/delayed/session/gprs
            ObjectCacheType = CONVERGENT

            Module
            {
              Grammar = ./formatDesc/Formats/Solution42/V670_EVENT_LOADER_OutGrammar.dsc
              DeleteEmptyStream = True # defaults to TRUE

              OutputStream
              {
                ModuleName = EXT_OutFileManager
                Module
                {
                  OutputPath = ./data/out/gprs
                  OutputPrefix = test_CONV_GPRSIP
                  OutputSuffix = .out
                  TempPrefix   = .

                  TempDataPath    = ./data/out/gprs
                  TempDataPrefix  = CONV_gprs_ip.tmp.
                  TempDataSuffix  = .data

                  Replace = TRUE
                }
              }
            }
          } # end of CONV_GPRSIPOutput

	  #--------------------------------------------------------------------
          # The /service/telco/gprs output stream
          #--------------------------------------------------------------------
          GPRSTELCOOutput
          {
            ModuleName = OUT_GenericStream

            ProcessType = RATING_PIPELINE
            EventType = /event/delayed/session/telco/gprs

            Module
            {
              Grammar = ./formatDesc/Formats/Solution42/V670_EVENT_LOADER_OutGrammar.dsc
              DeleteEmptyStream = True # defaults to TRUE

              OutputStream
              {
                ModuleName = EXT_OutFileManager
                Module
                {
                  OutputPath = ./data/out/gprs
                  OutputPrefix = test_GPRSTELCO
                  OutputSuffix = .out
                  TempPrefix   = .

                  TempDataPath    = ./data/out/gprs
                  TempDataPrefix  = gprs_telco.tmp.
                  TempDataSuffix  = .data

                  Replace = TRUE
                }
              }
            }
          } # end of GPRSTELCOOutput   

          CONV_GPRSTELCOOutput
          {
            ModuleName = OUT_GenericStream

            ProcessType = RATING_PIPELINE
            EventType = /event/delayed/session/telco/gprs
            ObjectCacheType = CONVERGENT

            Module
            {
              Grammar = ./formatDesc/Formats/Solution42/V670_EVENT_LOADER_OutGrammar.dsc
              DeleteEmptyStream = True # defaults to TRUE

              OutputStream
              {
                ModuleName = EXT_OutFileManager
                Module
                {
                  OutputPath = ./data/out/gprs
                  OutputPrefix = test_CONV_GPRSTELCO
                  OutputSuffix = .out
                  TempPrefix   = .

                  TempDataPath    = ./data/out/gprs
                  TempDataPrefix  = CONV_gprs_telco.tmp.
                  TempDataSuffix  = .data

                  Replace = TRUE
                }
              }
            }
          } # end of CONV_GPRSTELCOOutput 
          
          #--------------------------------------------------------------------
          # The /service/gsm/fax output stream
          #--------------------------------------------------------------------
          FAXOutput
          {
            ModuleName = OUT_GenericStream

            ProcessType = RATING_PIPELINE
            EventType = /event/delayed/session/telco/gsm

            Module
            {
              Grammar = ./formatDesc/Formats/Solution42/V670_EVENT_LOADER_OutGrammar.dsc
              DeleteEmptyStream = True #defaults to true

              OutputStream
              {
                ModuleName = EXT_OutFileManager
                Module
                {
                  OutputPath = ./data/out/gsm/fax
                  OutputPrefix = test_FAX
                  OutputSuffix = .out
                  TempPrefix   = .                  

                  TempDataPath    = ./data/out/gsm/fax
                  TempDataPrefix  = fax.tmp.
                  TempDataSuffix  = .data

                  Replace = TRUE
                }
              }
            }
          } # end of FaxOutput          

          CONV_FAXOutput
          {
            ModuleName = OUT_GenericStream

            ProcessType = RATING_PIPELINE
            EventType = /event/delayed/session/telco/gsm
            ObjectCacheType = CONVERGENT

            Module
            {
              Grammar = ./formatDesc/Formats/Solution42/V670_EVENT_LOADER_OutGrammar.dsc
              DeleteEmptyStream = True #defaults to true

              OutputStream
              {
                ModuleName = EXT_OutFileManager
                Module
                {
                  OutputPath = ./data/out/gsm/fax
                  OutputPrefix = test_CONV_FAX
                  OutputSuffix = .out
                  TempPrefix   = .

                  TempDataPath    = ./data/out/gsm/fax
                  TempDataPrefix  = CONV_fax.tmp.
                  TempDataSuffix  = .data

                  Replace = TRUE
                }
              }
            }
          } # end of CONV_FaxOutput
          
          #--------------------------------------------------------------------
          # The /service/sms output stream
          #--------------------------------------------------------------------
          SMSOutput
          {
            ModuleName = OUT_GenericStream

            ProcessType = RATING_PIPELINE
            EventType = /event/delayed/session/telco/gsm

            Module
            {
              Grammar = ./formatDesc/Formats/Solution42/V670_EVENT_LOADER_OutGrammar.dsc
              DeleteEmptyStream = True #defaults to true

              OutputStream
              {
                ModuleName = EXT_OutFileManager
                Module
                {
                  OutputPath = ./data/out/gsm/sms
                  OutputPrefix = test_SMS
                  OutputSuffix = .out
                  TempPrefix   = .                  

                  TempDataPath    = ./data/out/gsm/sms
                  TempDataPrefix  = sms.tmp.
                  TempDataSuffix  = .data

                  Replace = TRUE
                }
              }
            }
          } # end of SMSOutput          

          CONV_SMSOutput
          {
            ModuleName = OUT_GenericStream

            ProcessType = RATING_PIPELINE
            EventType = /event/delayed/session/telco/gsm
            ObjectCacheType = CONVERGENT

            Module
            {
              Grammar = ./formatDesc/Formats/Solution42/V670_EVENT_LOADER_OutGrammar.dsc
              DeleteEmptyStream = True #defaults to true

              OutputStream
              {
                ModuleName = EXT_OutFileManager
                Module
                {
                  OutputPath = ./data/out/gsm/sms
                  OutputPrefix = test_CONV_SMS
                  OutputSuffix = .out
                  TempPrefix   = .

                  TempDataPath    = ./data/out/gsm/sms
                  TempDataPrefix  = CONV_sms.tmp.
                  TempDataSuffix  = .data

                  Replace = TRUE
                }
              }
            }
          } # end of CONV_SMSOutput
          
          #--------------------------------------------------------------------
          # The /service/wap output stream
          #--------------------------------------------------------------------
          WAPOutput
          {
            ModuleName = OUT_GenericStream

            ProcessType = RATING_PIPELINE
            EventType = /event/delayed/activity/wap/interactive

            Module
            {
              Grammar = ./formatDesc/Formats/Solution42/V670_EVENT_LOADER_OutGrammar.dsc
              DeleteEmptyStream = True #defaults to true

              OutputStream
              {
                ModuleName = EXT_OutFileManager
                Module
                {
                  OutputPath = ./data/out/wap
                  OutputPrefix = test_WAP
                  OutputSuffix = .out
                  TempPrefix   = .                  

                  TempDataPath    = ./data/out/wap
                  TempDataPrefix  = wap.tmp.
                  TempDataSuffix  = .data

                  Replace = TRUE
                }
              }
            }
          } # end of WAPOutput          

          CONV_WAPOutput
          {
            ModuleName = OUT_GenericStream

            ProcessType = RATING_PIPELINE
            EventType = /event/delayed/activity/wap/interactive
            ObjectCacheType = CONVERGENT

            Module
            {
              Grammar = ./formatDesc/Formats/Solution42/V670_EVENT_LOADER_OutGrammar.dsc
              DeleteEmptyStream = True #defaults to true

              OutputStream
              {
                ModuleName = EXT_OutFileManager
                Module
                {
                  OutputPath = ./data/out/wap
                  OutputPrefix = test_CONV_WAP
                  OutputSuffix = .out
                  TempPrefix   = .

                  TempDataPath    = ./data/out/wap
                  TempDataPrefix  = CONV_wap.tmp.
                  TempDataSuffix  = .data

                  Replace = TRUE
                }
              }
            }
          } # end of CONV_WAPOutput
          
           
          #--------------------------------------------------------------------------
          # SuspenseCreateOutput Stream
          #--------------------------------------------------------------------------
          SuspenseCreateOutput
          {
            ModuleName = OUT_GenericStream
            EventType  = /suspended_usage
            Module
            {
              Grammar = ./formatDesc/Formats/SuspenseHandling/SuspendedUsageCreationGrammar.dsc
              DeleteEmptyStream = True
              OutputStream
              {
                ModuleName = EXT_OutFileManager
                Module
                {
                  OutputPath = ./data/reject
                  OutputPrefix = suspense_create_
                  OutputSuffix = .out
                  TempPrefix = tmp
                  TempDataPath = ./data/reject
                  TempDataPrefix = susp.create.tmp.
                  TempDataSuffix = .data
                  Replace = True
                  AppendSequenceNumber = False
                }
              }
             }
           } # end of SuspenseCreateOutput
                    
          #--------------------------------------------------------------------------
          # SuspenseUpdateOutput Stream
          #--------------------------------------------------------------------------
          SuspenseUpdateOutput
          {
            ModuleName = OUT_GenericStream
            EventType  = /tmp_suspended_usage
            Module
            {
              Grammar = ./formatDesc/Formats/SuspenseHandling/SuspendedUsageUpdateGrammar.dsc
              DeleteEmptyStream = True
              OutputStream
              {
                ModuleName = EXT_OutFileManager
                Module
                {
                  OutputPath = ./data/reject
                  OutputPrefix = suspense_update_
                  OutputSuffix = .out
                  TempPrefix = tmp
                  TempDataPath = ./data/reject
                  TempDataPrefix = susp.update.tmp.
                  TempDataSuffix = .data
                  Replace = True
                  AppendSequenceNumber = False
                }
              }
             }
           } # end of SuspenseUpdateOutput
                    
        } # end of OutputCollection

        OutputLog
        {
          FilePath        = ./log/stream
          FileName        = stream
          FilePrefix      = Stream_
          FileSuffix      = .log

          SuppressErrors
          {
            ERR_SPEC_VERSION_INVALID
            ERR_RELEASE_VERSION_INVALID
          }
        }
        
        SequenceGeneration = Unit

        #-------------------------------
        EdrTraceEnabled = False
        EdrTrace
        {
            TraceLog
            {
                 FilePath   = ./log/edrLog
                 FileName   = edrTraceLog
                 FilePrefix = log_
                 FileSuffix = .log
            }

            TraceStartPoint =  Input
            TraceEndPoint   = Output

        } # END EdrTrace

        
      } # end of Output    
      
    } # END ALL_RATE

    #--------------------------------------------------------------------------
    # BackOut pipeline.
    #--------------------------------------------------------------------------
    ALL_BCKOUT
    {
      Active                      = False
      
      CountryCode                 = 49
      MobileCountryCode           = 262
      NationalAccessCode          = 0
      InternationalAccessCode     = 00
      InternationalAccessCodeSign = +
      NetworkDestinationCode      = 172

      RejectStream                = SuspenseCreateOutput 
      
      TransactionManager
      {
        RedoEnabled = True #False
        SingleTransaction = False
        WriteToLogEnabled = True
        BinaryLogFileName = ./tam/binaryLogFileBACKOUT.dat
      }
      
      EdrFactory 
      { 
        DataConnection = ifw.DataPool.Login 
        Description = ./formatDesc/Portal/containerDesc.dsc
        #UsageStatistic = ./log/edrStatisticBACKOUT.txt 
      }

      DataDescription
      {
        Standard
        {
          ModuleName = Standard
          Module
          {
            StreamFormats
            {
              SOL42_FORINPUT = ./formatDesc/Formats/Solution42/SOL42_V670_REL_FORINPUT.dsc
              SOL42 = ./formatDesc/Formats/Solution42/SOL42_V670_REL.dsc
              EVENT_LOADER = ./formatDesc/Formats/Solution42/V670_EVENT_LOADER.dsc
              SUSPENSE_CREATE_OUTPUT = ./formatDesc/Formats/SuspenseHandling/SuspendedUsageCreation.dsc
              SUSPENSE_UPDATE_OUTPUT = ./formatDesc/Formats/SuspenseHandling/SuspendedUsageUpdate.dsc
            }

            InputMapping
            {
              SOL42 = ./formatDesc/Formats/Solution42/SOL42_V670_REL_InMap.dsc
            }

            OutputMapping
            {
              SOL42 = ./formatDesc/Formats/Solution42/SOL42_V670_REL_OutMap.dsc
              EVENT_LOADER = ./formatDesc/Formats/Solution42/V670_EVENT_LOADER_OutMap.dsc
              SUSPENSE_CREATE_OUTPUT = ./formatDesc/Formats/SuspenseHandling/SuspendedUsageCreationMapping.dsc
              SUSPENSE_UPDATE_OUTPUT = ./formatDesc/Formats/SuspenseHandling/SuspendedUsageUpdateMapping.dsc
            }
          }
        }
      } # end of DataDescription

      PipelineLog 
      { 
        ModuleName = LOG
        Module 
        { 
          ITO 
          { 
            FilePath = ./log/pipeline
            FileName = backout.log
            ProcessName = ifw
            MessageGroup = IFW
            ShowOriginator = TRUE
          }

          Buffer 
          { 
            Size = 500
          } 
        } 
      } # end of PipelineLog

      InputBuffer
      {
        BlockTransfer = TRUE
        Size = 2000
        BlockSize = 500
      }

      OutputBuffer
      {
        BlockTransfer = TRUE
        Size = 2000
        BlockSize = 500
      }
      
      #------------------------------------------------------------------------
      # Input section
      #------------------------------------------------------------------------
      Input
      {
        UnitsPerTransaction = 1

        InputModule
        {
          ModuleName  = INP_GenericStream
          Module
          {
            DefaultOutput = RerateOutput

	    Grammar = ./formatDesc/Formats/Solution42/SOL42_V670_REL_InGrammar_BACKOUT.dsc
            InputStream
            {
              ModuleName = EXT_InFileManager
              Module
              {
                InputDirEmptyTimeout = 10

                InputPath   = ./data/backout/in
                InputPrefix = test.
                InputSuffix = .edr
 
                DonePath    = ./data/backout/done
                DonePrefix  = test.
                DoneSuffix  = .done
           
                ErrorPath   = ./data/backout/error
                ErrorPrefix = test.
                ErrorSuffix = .err

                TempPrefix  = tmp.
  
                Replace     = TRUE
              }
            } # end of InputStream
          }
        } # end of InputModule
      } # end of Input

      #------------------------------------------------------------------------
      # Function section
      #------------------------------------------------------------------------
      Functions 
      {
        BackOut
        {
          FunctionPool
          {
            
            #---------------------------------------------------
            # PreSuspense FCT
            #---------------------------------------------------
            PreSuspense
            {
              ModuleName = FCT_PreSuspense
              Module
              {
                Active = True
              }
            }
 
            #--------------------------------------------------
            # Re-create Associated Charge Breakdown Record
            #--------------------------------------------------
            #Add_AssCBD
            #{
              #ModuleName = FCT_IScript
              #Module
              #{
                #Active = True
                #Source = FILE
                #Scripts
                #{
                  #Add_AssCBD
                  #{
                    #FileName = ./iScriptLib/iScriptLib_Standard/ISC_AddCBD.isc
                  #}
                #}
              #}
            #}

            #--------------------------------------------------
            # Discounting
            #--------------------------------------------------
            CrossProductVolumeDiscounting
            {
              ModuleName = FCT_Discount
              Module
              {
                Active                   = TRUE
                BackOut                  = True
                DiscountDataModule       = ifw.DataPool.DiscountModelDataModule
                BalanceDataModule        = ifw.DataPool.BalanceDataModule
                AccountDataModule        = ifw.DataPool.CustomerData
                CurrencyDataModule       = ifw.DataPool.CurrencyDataModule
                DiscountMoreThanPossible = False
              }
            }
        
            #--------------------------------------------------
            # Aggregation
            #--------------------------------------------------
            #AggreGate
            #{
            #  ModuleName = FCT_AggreGate
            #  Module
            #  {
            #    Active                    = False
            #    BackOut                   = True
            #    ScenarioReaderDataModule  = ifw.DataPool.ScenarioReader
            #  
            #    Scenarios
            #    {
            #      USAGE_STAT
            #      {
            #        TableName       = USAGE_STAT
            #        Threshold       = 100000
            #        TempDir        = ./data/aggregate/temp
            #        DoneDir        = ./data/aggregate/result
            #        CtlDir         = ./data/aggregate/result
            #        FieldDelimiter  = |
            #        FlushMode       = 0
            #      }
            #    }
            #  
            #    ResultFile
            #    {
            #      IncludeFormat  = FALSE
            #      TempSuffix     = .tmp
            #      DoneSuffix     = .dat
            #      WriteEmptyFile = FALSE
            #    }
            #  
            #    ControlFile
            #    {
            #      IncludeFormat  = FALSE
            #      Suffix         = .ctl
            #      DataFilePath   = TRUE
            #    }
            #  }
            #}              
            
            #--------------------------------------------------
            # Split Output per switcherror
            #--------------------------------------------------
            BackOutputSplit
            {
              ModuleName = FCT_IScript
              Module
              {
                Active = TRUE
                Source = File
                Scripts
                {
                  SplitScript
                  {
                    FileName = ./iScriptLib/iScriptLib_Standard/ISC_BACKOUTTypeSplitting.isc
                  }
                }
              }
            }
             
            #--------------------------------------------------
            # Rejection
            #--------------------------------------------------
            Rejection
            {
              ModuleName = FCT_Reject
              Module
              {
                Active          = True 
                NotifyOnReject  = True 
                UseRejectStream = True
                StreamMap {}
              }
            }

            #---------------------------
            # Suspense FCT
            #---------------------------
            Suspense
            {
              ModuleName  = FCT_Suspense
              Module
              {
                Active = True
                SuspenseCreateStream     = SuspenseCreateOutput
                SuspenseUpdateStream     = SuspenseUpdateOutput
                DataConnection           = ifw.DataPool.LoginInfranet
                LogTestResults           = False
                PipelineCategory         = ReratingPipeline
                RecycleLog
                {
                }
              }
            }

 
##----------------------------------------------------------------------
##         Deprecated because of the introduction of EDR Trace
##----------------------------------------------------------------------
##
##          #--------------------------------------------------
##          # EDR Dump
##          #--------------------------------------------------
##          EdrDump_post
##          {
##            ModuleName = FCT_EdrDump
##            Module
##            {
##              Active = False
##              FileName = ./data/dump/BACKOUT_post.txt
##            }
##          }
##----------------------------------------------------------------------
               
          } # END FunctionPool
        } # END BacKOut 
       } # END Functions

      #--------------------------------------------------
      # Output Section
      #--------------------------------------------------
      Output
      {
        WriteDefaultEdr            = False

        MaxErrorRates
        {
        }

        OutputCollection
        {
          #--------------------------------------------------------------------
          # The /service/telco/gsm/telephony output stream for BackOutOnly
          #--------------------------------------------------------------------
          BackOutOnlyTELOutput
          {
            ModuleName = OUT_GenericStream

            ProcessType = BACKOUT_PIPELINE
            EventType = /event/delayed/session/telco/gsm

            Module
            {
              Grammar = ./formatDesc/Formats/Solution42/V670_EVENT_LOADER_OutGrammar.dsc
              DeleteEmptyStream = True #defaults to true

              OutputStream
              {
                ModuleName = EXT_OutFileManager
                Module
                {
                  OutputPath = ./data/backout/out/gsm/telephony
                  OutputPrefix = test_TEL
                  OutputSuffix = .out
                  TempPrefix   = .

                  TempDataPath    = ./data/backout/out/gsm/telephony
                  TempDataPrefix  = tel.tmp.
                  TempDataSuffix  = .data

                  Replace = TRUE
                }
              }
            }
          } # end of BackOutOnlyTELOutput 

          #--------------------------------------------------------------------
          # The /service/ip/gprs output stream for BackOutOnly
          #--------------------------------------------------------------------
          BackOutOnlyGPRSIPOutput
          {
            ModuleName = OUT_GenericStream

            ProcessType = BACKOUT_PIPELINE
            EventType = /event/delayed/session/gprs
            Module
            {
              Grammar = ./formatDesc/Formats/Solution42/V670_EVENT_LOADER_OutGrammar.dsc
              DeleteEmptyStream = True #defaults to true

              OutputStream
              {
                ModuleName = EXT_OutFileManager
                Module
                {
                  OutputPath = ./data/backout/out/gprs
                  OutputPrefix = test_GPRSIP
                  OutputSuffix = .out
                  TempPrefix   = .

                  TempDataPath    = ./data/backout/out/gprs
                  TempDataPrefix  = gprs_ip.tmp.
                  TempDataSuffix  = .data

                  Replace = TRUE
                }
              }
            }
          } # end of BackOutOnlyGPRSIPOutput 
	  #--------------------------------------------------------------------
          # The /service/telco/gprs output stream for BackOutOnly
          #--------------------------------------------------------------------
          BackOutOnlyGPRSTELCOOutput
          {
            ModuleName = OUT_GenericStream

            ProcessType = BACKOUT_PIPELINE
            EventType = /event/delayed/session/telco/gprs
            Module
            {
              Grammar = ./formatDesc/Formats/Solution42/V670_EVENT_LOADER_OutGrammar.dsc
              DeleteEmptyStream = True #defaults to true

              OutputStream
              {
                ModuleName = EXT_OutFileManager
                Module
                {
                  OutputPath = ./data/backout/out/gprs
                  OutputPrefix = test_GPRSTELCO
                  OutputSuffix = .out
                  TempPrefix   = .

                  TempDataPath    = ./data/backout/out/gprs
                  TempDataPrefix  = gprs_telco.tmp.
                  TempDataSuffix  = .data

                  Replace = TRUE
                }
              }
            }
          } # end of BackOutOnlyGPRSTELCOOutput 

          #--------------------------------------------------------------------
          # The /service/telco/gsm/fax output stream for BackOutOnly
          #--------------------------------------------------------------------
          BackOutOnlyFAXOutput
          {
            ModuleName = OUT_GenericStream

            ProcessType = BACKOUT_PIPELINE
            EventType = /event/delayed/session/telco/gsm

            Module
            {
              Grammar = ./formatDesc/Formats/Solution42/V670_EVENT_LOADER_OutGrammar.dsc
              DeleteEmptyStream = True #defaults to true

              OutputStream
              {
                ModuleName = EXT_OutFileManager
                Module
                {
                  OutputPath = ./data/backout/out/gsm/fax
                  OutputPrefix = test_FAX
                  OutputSuffix = .out
                  TempPrefix   = .

                  TempDataPath    = ./data/backout/out/gsm/fax
                  TempDataPrefix  = fax.tmp.
                  TempDataSuffix  = .data

                  Replace = TRUE
                }
              }
            }
          } # end of BackOutOnlyFAXOutput 
          
          #--------------------------------------------------------------------
          # The /service/telco/gsm/sms output stream for BackOutOnly
          #--------------------------------------------------------------------
          BackOutOnlySMSOutput
          {
            ModuleName = OUT_GenericStream

            ProcessType = BACKOUT_PIPELINE
            EventType = /event/delayed/session/telco/gsm

            Module
            {
              Grammar = ./formatDesc/Formats/Solution42/V670_EVENT_LOADER_OutGrammar.dsc
              DeleteEmptyStream = True #defaults to true

              OutputStream
              {
                ModuleName = EXT_OutFileManager
                Module
                {
                  OutputPath = ./data/backout/out/gsm/sms
                  OutputPrefix = test_SMS
                  OutputSuffix = .out
                  TempPrefix   = .

                  TempDataPath    = ./data/backout/out/gsm/sms
                  TempDataPrefix  = sms.tmp.
                  TempDataSuffix  = .data

                  Replace = TRUE
                }
              }
            }
          } # end of BackOutOnlySMSOutput 
          
          #--------------------------------------------------------------------
          # The /service/wap output stream for BackOutOnly
          #--------------------------------------------------------------------
          BackOutOnlyWAPOutput
          {
            ModuleName = OUT_GenericStream

            ProcessType = BACKOUT_PIPELINE
            EventType = /event/delayed/activity/wap/interactive

            Module
            {
              Grammar = ./formatDesc/Formats/Solution42/V670_EVENT_LOADER_OutGrammar.dsc
              DeleteEmptyStream = True #defaults to true

              OutputStream
              {
                ModuleName = EXT_OutFileManager
                Module
                {
                  OutputPath = ./data/backout/out/wap
                  OutputPrefix = test_WAP
                  OutputSuffix = .out
                  TempPrefix   = .

                  TempDataPath    = ./data/backout/out/wap
                  TempDataPrefix  = wap.tmp.
                  TempDataSuffix  = .data

                  Replace = TRUE
                }
              }
            }
          } # end of BackOutOnlyWAPOutput

          #--------------------------------------------------------------------
          # SuspenseCreateOutput stream
          #--------------------------------------------------------------------
          SuspenseCreateOutput
          {
            ModuleName = OUT_GenericStream
            EventType = /suspended_usage
            Module
            {
              Grammar = ./formatDesc/Formats/SuspenseHandling/SuspendedUsageCreationGrammar.dsc
              DeleteEmptyStream = True
              OutputStream
              {
                ModuleName = EXT_OutFileManager
                Module
                {
                  OutputPath = ./data/backout/reject
                  OutputPrefix = suspense_create_
                  OutputSuffix = .out
                  TempPrefix = tmp
                  TempDataPath = ./data/backout/reject
                  TempDataPrefix = susp.create.tmp.
                  TempDataSuffix = .data
                  Replace = True
                  AppendSequenceNumber = False
                }
              }
            }
          } # end of SuspenseCreateOutput
 
          #--------------------------------------------------------------------
          # SuspenseUpdateOutput stream
          #--------------------------------------------------------------------
          SuspenseUpdateOutput
          {
            ModuleName = OUT_GenericStream
            EventType = /tmp_suspended_usage

            Module
            {
              Grammar = ./formatDesc/Formats/SuspenseHandling/SuspendedUsageUpdateGrammar.dsc
              DeleteEmptyStream = True

              OutputStream
              {
                ModuleName = EXT_OutFileManager
                Module
                {
                  OutputPath = ./data/backout/reject
                  OutputPrefix = suspense_update_
                  OutputSuffix = .out
                  TempPrefix = tmp
                  TempDataPath = ./data/backout/reject
                  TempDataPrefix = susp.update.tmp.
                  TempDataSuffix = .data
                  Replace = True
                  AppendSequenceNumber = False
                }
              }
            }
          } # end of SuspenseUpdateOutput

          #--------------------------------------------------------------------
          # The output stream for rerating
          #--------------------------------------------------------------------

          RerateOutput
          {
            ModuleName = OUT_GenericStream

            ProcessType = BACKOUT_PIPELINE

            Module
            {
              Grammar = ./formatDesc/Formats/Solution42/SOL42_V670_REL_OutGrammar_BACKOUT.dsc
              DeleteEmptyStream = True # defaults to true

              OutputStream
              {
                ModuleName = EXT_OutFileManager
                Module
                {
                  OutputPath = ./data/rerate/in
                  OutputPrefix = test.
                  OutputSuffix = .edr
                  TempPrefix   = _

                  TempDataPath    = ./data/rerate/in
                  TempDataPrefix  = out.tmp.
                  TempDataSuffix  = .data

                  Replace = TRUE
                }
              }
            }
          } # end of put
        } # end of OutputCollection

        OutputLog
        {
          FilePath        = ./data/backout/log/stream
          FileName        = stream
          FilePrefix      = Stream_
          FileSuffix      = .log

          SuppressErrors
          {
            ERR_SPEC_VERSION_INVALID
            ERR_RELEASE_VERSION_INVALID
          }
        }
        
        SequenceGeneration = Unit

        #-------------------------------
        EdrTraceEnabled = False
        EdrTrace
        {
            TraceLog
            {
                 FilePath   = ./log/edrLog
                 FileName   = edrTraceLog
                 FilePrefix = log_
                 FileSuffix = .log
            }

            TraceStartPoint =  Input
            TraceEndPoint   = Output

        } # END EdrTrace


      } # end of Output

    } # END ALL_BCKOUT

    #--------------------------------------------------------------------------
    # Re-Rating pipeline.
    #--------------------------------------------------------------------------
    ALL_RERATE
    {
      Active                      = False
      
      CountryCode                 = 49
      MobileCountryCode           = 262
      NationalAccessCode          = 0
      InternationalAccessCode     = 00
      InternationalAccessCodeSign = +
      NetworkDestinationCode      = 172
      RejectStream                = SuspenseCreateOutput 
      
      TransactionManager
      {
        RedoEnabled = True #False
        SingleTransaction = False
        WriteToLogEnabled = True
        BinaryLogFileName = ./tam/binaryLogFileALL_RERATE.dat
      }
      
      EdrFactory 
      { 
        DataConnection = ifw.DataPool.Login 
        Description = ./formatDesc/Portal/containerDesc.dsc
        #UsageStatistic = ./log/edrStatisticALL_RERATE.txt 
      }

      DataDescription
      {
        Standard
        {
          ModuleName = Standard
          Module
          {
            StreamFormats
            {
              SOL42_FORINPUT = ./formatDesc/Formats/Solution42/SOL42_V670_REL_FORINPUT.dsc
              EVENT_LOADER = ./formatDesc/Formats/Solution42/V670_EVENT_LOADER.dsc
              SUSPENSE_CREATE_OUTPUT = ./formatDesc/Formats/SuspenseHandling/SuspendedUsageCreation.dsc
              SUSPENSE_UPDATE_OUTPUT = ./formatDesc/Formats/SuspenseHandling/SuspendedUsageUpdate.dsc
            }

            InputMapping
            {
              SOL42 = ./formatDesc/Formats/Solution42/SOL42_V670_REL_InMap.dsc
            }

            OutputMapping
            {
              EVENT_LOADER = ./formatDesc/Formats/Solution42/V670_EVENT_LOADER_OutMap.dsc
              SUSPENSE_CREATE_OUTPUT = ./formatDesc/Formats/SuspenseHandling/SuspendedUsageCreationMapping.dsc
              SUSPENSE_UPDATE_OUTPUT = ./formatDesc/Formats/SuspenseHandling/SuspendedUsageUpdateMapping.dsc
            }
          }
        }
      } # end of DataDescription

      PipelineLog 
      { 
        ModuleName = LOG
        Module 
        { 
          ITO 
          { 
            FilePath = ./log/pipeline
            FileName = rerating.log
            ProcessName = ifw
            MessageGroup = IFW
            ShowOriginator = TRUE
          }

          Buffer 
          { 
            Size = 500
          } 
        } 
      } # end of PipelineLog

      InputBuffer
      {
        BlockTransfer = TRUE
        Size = 2000
        BlockSize = 500
      }

      OutputBuffer
      {
        BlockTransfer = TRUE
        Size = 2000
        BlockSize = 500
      }
      
      #------------------------------------------------------------------------
      # Input section
      #------------------------------------------------------------------------
      Input
      {
        UnitsPerTransaction = 1

        InputModule
        {
          ModuleName  = INP_GenericStream
          Module
          {
            DefaultOutput = TELOutput
            Grammar       = ./formatDesc/Formats/Solution42/SOL42_V670_REL_InGrammar.dsc

            InputStream
            {
              ModuleName = EXT_InFileManager
              Module
              {
                InputDirEmptyTimeout = 10

                InputPath   = ./data/rerate/in
                InputPrefix = test
                InputSuffix = .edr
 
                DonePath    = ./data/rerate/done
                DonePrefix  = test
                DoneSuffix  = .done
           
                ErrorPath   = ./data/rerate/error
                ErrorPrefix = test
                ErrorSuffix = .err

                TempPrefix  = tmp
  
                Replace     = TRUE
              }
            } # end of InputStream
          }
        } # end of InputModule
      } # end of Input

      #------------------------------------------------------------------------
      # Function section
      #------------------------------------------------------------------------
      Functions 
      {
        PreProcessing
        {
          FunctionPool
          {
           
            #---------------------------------------------------
            # PreSuspense FCT
            #---------------------------------------------------
            PreSuspense
            {
              ModuleName = FCT_PreSuspense
              Module
              {
                Active = True
              }
            }

            #--------------------------------------------------
            # Usage Class Mapping
            #--------------------------------------------------
            UsageClassMap
            {
              ModuleName = FCT_UsageClassMap 
              Module 
              { 
                Active              = TRUE
                DataConnection      = ifw.DataPool.Login
                OverwriteUsageClass = False 
                MapGroup            = ALL_RATE
                #OptimizeFor        = Memory 
              } 
            }

            #--------------------------------------------------
            # Service Code Mapping
            #--------------------------------------------------
            ServiceCodeMap
            {
              ModuleName = FCT_ServiceCodeMap
              Module
              {
                Active             = TRUE
                DataConnection     = ifw.DataPool.Login
                MapGroup           = ALL_RATE
              }
            }
            
            #--------------------------------------------------
            # Prefix Description
            #--------------------------------------------------
            PrefixDesc
            {
              ModuleName = FCT_PrefixDesc
              Module
              {
                Active = TRUE
                PrefixDataModule = ifw.DataPool.PrefixDescDataModule
              }
            }              

            #--------------------------------------------------
            # Infranet Customer
            #--------------------------------------------------
            CustomerSearch
            { 
              ModuleName = FCT_Account
              Module 
              { 
                Active         = TRUE
                DataModule     = ifw.DataPool.CustomerData
                #DisableRatingProductCheck  = False
              }
            } 

            #--------------------------------------------------
            # Profile analysis
            #--------------------------------------------------
            ProfileAnalyzer
            {
              ModuleName = FCT_IScript
              Module
              {
                Active = False
                Source = FILE
                Scripts
                {
                  ProfileAnalyzer
                  {
                    ProfileName = FRIENDS_FAMILY
                    LabelSeparator = ,
                    FileName = ./iScriptLib/iScriptLib_Standard/ISC_ProfileAnalyzer.isc
                  }
                }
              }
            }

            #--------------------------------------------------
            # Customer Individual Rating
            #--------------------------------------------------
            CustomerRating
            { 
              ModuleName = FCT_CustomerRating 
              Module 
              { 
                Active          = TRUE
                Mode            = CUSTOMER 
                DataConnection  = ifw.DataPool.Login 
                DefaultRateplan = Standard
              } 
            }
            
##----------------------------------------------------------------------
##         Deprecated because of the introduction of EDR Trace
##----------------------------------------------------------------------
##
##          #--------------------------------------------------
##          # Edr Dump to Disk
##          #--------------------------------------------------
##          EdrDump_pre
##          {
##            ModuleName = FCT_EdrDump
##            Module
##            {
##              Active = False
##              FileName = ./data/dump/RERATE_pre.txt
##            }
##          }
##----------------------------------------------------------------------

            #--------------------------------------------------
            # Pre-Rating (Zoning)
            #--------------------------------------------------
            PreRatingZone
            {
              ModuleName = FCT_PreRating
              Module
              {
                Active = TRUE
                RateplanDataModule = ifw.DataPool.RateplanDataModule
                ZoneDataModule = ifw.DataPool.ZoneDataModule
              }
            }
            
            #--------------------------------------------------
            # Usage Type Mapping
            #--------------------------------------------------              
            UsageType
            { 
               ModuleName = FCT_IRules 
               Module 
               { 
                 Active = TRUE
                 Source = File 
                 Descriptions 
                 { 
                   UsageTypeDetermination = ./iScriptLib/iScriptLib_Standard/IRL_UsageType.irl
                 }
               } 
            }              

            #--------------------------------------------------
            # Access Point Name Mapping (after zoning)
            #--------------------------------------------------              
            APNMap
            {
              ModuleName = FCT_APN_Map 
              Module 
              { 
                Active         = TRUE
                DataConnection = ifw.DataPool.Login
                APNGroup {} 
              }
            } 
            
            #--------------------------------------------------
            # Usage Scenario Mapping
            #--------------------------------------------------
            UsageScenarioMap
            {
              ModuleName = FCT_USC_Map
              Module
              {
                Active = TRUE
                Source = Database
                DataConnection = ifw.DataPool.Login
		DataModule = ifw.DataPool.USCDataModule
                DefaultUSCGroup = ALL_RATE
              }
            }
            
            #--------------------------------------------------
            # Rate Service Class Mapping
            #--------------------------------------------------              
            RateServiceClassMap 
            { 
              ModuleName = FCT_RSC_Map 
              Module 
              {
                Active          = FALSE 
                DataConnection  = ifw.DataPool.Login
                DefaultRscGroup = ALL_RATE
              } 
            }
          }
        } # END of PreProcessing

        Buffer1
        {
          BlockTransfer = TRUE
          Size = 2000
          BlockSize = 500
        }

        Rating
        {
          FunctionPool
          {
            #--------------------------------------------------
            # Main Rating (Pricing)
            #--------------------------------------------------
            MainRating
            {
              ModuleName = FCT_MainRating
              Module
              {
                Active                  = TRUE
                RateplanDataModule      = ifw.DataPool.RateplanDataModule
                CalendarDataModule      = ifw.DataPool.CalendarDataModule
                TimeDataModule          = ifw.DataPool.TimeDataModule
                PriceDataModule         = ifw.DataPool.PriceDataModule
                CurrencyDataModule      = ifw.DataPool.CurrencyDataModule
                ModelSelectorDataModule = ifw.DataPool.ModelSelectorDataModule
              }
            }

            #--------------------------------------------------
            # Special Dayrates
            #--------------------------------------------------
            SpecialDayRate
            {
              ModuleName = FCT_Dayrate
              Module
              {
                Active = TRUE
                DayrateDataModule = ifw.DataPool.DayRateDataModule
              }
            }

            #--------------------------------------------------
            # Rate Adjustment
            #--------------------------------------------------
            RateAdjustment
            {
              ModuleName = FCT_RateAdjust
              Module
              {
                Active         = TRUE
                Source         = Database
                DataConnection = ifw.DataPool.Login
              }
            }

            #--------------------------------------------------
            # Rounding (Rating)
            #--------------------------------------------------
            Round_Rating
            {
              ModuleName = FCT_Rounding
              Module
              {
                Active             = TRUE
                CurrencyDataModule = ifw.DataPool.CurrencyDataModule
                Mode               = RATING
              }
            }

            #--------------------------------------------------
            # Discount Analysis
            #--------------------------------------------------
            DiscountAnalysisModule
            {
              ModuleName = FCT_DiscountAnalysis
              Module
              {
                Active                   = TRUE
                DiscountModelDataModule  = ifw.DataPool.DiscountModelDataModule
                ModelSelectorDataModule  = ifw.DataPool.ModelSelectorDataModule 
              }
            }

            #--------------------------------------------------
            # Discounting
            #--------------------------------------------------
            CrossProductVolumeDiscounting
            {
              ModuleName = FCT_Discount
              Module
              {
                Active                   = TRUE
                DiscountDataModule       = ifw.DataPool.DiscountModelDataModule
                BalanceDataModule        = ifw.DataPool.BalanceDataModule
                AccountDataModule        = ifw.DataPool.CustomerData
                CurrencyDataModule       = ifw.DataPool.CurrencyDataModule
                DiscountMoreThanPossible = False
              }
            }

            #--------------------------------------------------
            # Rounding (CrossProductVolumeDiscounting)
            #--------------------------------------------------
            Round_CrossProductVolDiscounting
            {
              ModuleName = FCT_Rounding
              Module
              {
                Active             = TRUE
                CurrencyDataModule = ifw.DataPool.CurrencyDataModule
                Mode               = Discounting
              }
            }
   

            #--------------------------------------------------
            # ApplyBalance
            #--------------------------------------------------
            ApolloApplyBalanceModule
            {
              ModuleName = FCT_ApplyBalance
              Module
              {
                Active                   = TRUE
                DiscountDataModule       = ifw.DataPool.DiscountModelDataModule
                BalanceDataModule        = ifw.DataPool.BalanceDataModule
                DiscountFunctionalModule = Functions.Rating.FunctionPool.CrossProductVolumeDiscounting 
                PortalConfigDataModule   = ifw.DataPool.PortalConfigDataModule
                #NumberOfNotificationLimit   = 1000
                #NotificationOutputDirectory = ./data/out/notifybalancebreach
                #NotificationOutputPrefix    = balancebreach_
              }
            }

            
            #--------------------------------------------------
            # Exchange Rate Calculation
            #--------------------------------------------------              
            ExchangeRate
            {
              ModuleName  = FCT_ExchangeRate
              Module
              {
                Active                 = FALSE
                ExchangeRateDataModule = ifw.DataPool.ExchangeRateDataModule
                RatingDateBilling      = CDR
                RatingDateHome         = SYSTEM
                HomeCurrency           = EUR
                ErrorMessages          = FALSE
              }
            }
            
            #--------------------------------------------------
            # Post-Rating
            #--------------------------------------------------
            PostRating 
            { 
              ModuleName = FCT_IScript 
              Module 
              { 
                Active = FALSE
                Source = FILE 
                Scripts 
                { 
                  PostRating 
                  { 
                    FileName =  ./iScriptLib/iScriptLib_Standard/ISC_PostRating.isc

                    RetailRecordType = 981       # customer individual charge breakdown record
                    RetailResource = EUR 
                    RetailPricemodelType = S 
                    RetailCurrencyType = R       # rating currency

                    WholesaleRecordType = 990    # interconnect charge breakdown record
                    WholesaleResource = EUR
                    WholesalePricemodelType = A
                    WholesaleCurrencyType = H    # home currency
                  } 
                } 
              } 
            }

            #--------------------------------------------------
            # ItemAssign PlugIn
            #--------------------------------------------------
            FlexibleItemAssignment
            {
              ModuleName = FCT_ItemAssign
              Module
              {
                 Active     = TRUE
                 DataModule     = ifw.DataPool.ItemAssignDataModule
              }
            }
            
            #----------------------------------------------------------------
            # Add Infranet Billing Record (plugin version)
            #----------------------------------------------------------------
            InfranetBillingRecord
            {
              ModuleName = FCT_BillingRecord
              Module
              {
                Active = TRUE
                CurrencyType = R
                CurrencyDataModule = ifw.DataPool.CurrencyDataModule
                AccountDataModule  = ifw.DataPool.CustomerData
                ItemAssignDataModule  = ifw.DataPool.ItemAssignDataModule
                BalanceDataModule     = ifw.DataPool.BalanceDataModule
                PortalConfigDataModule   = ifw.DataPool.PortalConfigDataModule
                # indicating it's rating or re-rating, default is rating
                RatingPipeline = FALSE 
              }
            }

            #--------------------------------------------------
            # Aggregation
            #--------------------------------------------------
            #AggreGate
            #{
            #  ModuleName = FCT_AggreGate
            #  Module
            #  {
            #    Active                    = FALSE
            #    ScenarioReaderDataModule  = ifw.DataPool.ScenarioReader
            #  
            #    Scenarios
            #    {
            #      USAGE_STAT
            #      {
            #        TableName       = USAGE_STAT
            #        Threshold       = 100000
            #        TempDir        = ./data/aggregate/temp
            #        DoneDir        = ./data/aggregate/result
            #        CtlDir         = ./data/aggregate/result
            #        FieldDelimiter  = |
            #        FlushMode       = 0
            #      }
            #    }
            #    ResultFile
            #    {
            #      IncludeFormat  = FALSE
            #      TempSuffix     = .tmp
            #      DoneSuffix     = .dat
            #      WriteEmptyFile = FALSE
            #    }
            #    ControlFile
            #    {
            #      IncludeFormat  = FALSE
            #      Suffix         = .ctl
            #      DataFilePath   = TRUE
            #    }
            #  }
            #}              
             
            #--------------------------------------------------
            # Split Output per ServiceCode
            #--------------------------------------------------              
            ServiceOutputSplit
            {
              ModuleName = FCT_IRules
              Module
              {
                Active = TRUE
                Source = File
                Rules
                {
                }
                Descriptions
                {
                  ServiceCodeSplit = ./iScriptLib/iScriptLib_Standard/IRL_EventTypeSplitting.irl
                }
              }
            }

            #--------------------------------------------------
            # Split Output per ObjectCacheType 
            #--------------------------------------------------
            ObjectCacheTypeOutputSplit
            {
              ModuleName = FCT_IScript
              Module
              {
                Active = TRUE
                Source = File
                Scripts
                {
                  ObjectCacheTypeOutputSplit
                  {
                    FileName = ./iScriptLib/iScriptLib_Standard/ISC_ObjectCacheTypeOutputSplitter.isc
                  }
                }
              }
            }

            #--------------------------------------------------
            # Rejection
            #--------------------------------------------------
            Rejection
            {
              ModuleName = FCT_Reject
              Module
              {
                Active          = True 
                NotifyOnReject  = True 
                UseRejectStream = True
                StreamMap {}
              }
            }

            #---------------------------
            # Suspense FCT
            #---------------------------
            Suspense
            {
              ModuleName  = FCT_Suspense
              Module
              {
                Active = True
                SuspenseCreateStream     = SuspenseCreateOutput
                SuspenseUpdateStream     = SuspenseUpdateOutput
                DataConnection           = ifw.DataPool.LoginInfranet
                LogTestResults           = False
                PipelineCategory         = ReratingPipeline
                RecycleLog
                {
                }
              }
            }
 
##----------------------------------------------------------------------
##         Deprecated because of the introduction of EDR Trace
##----------------------------------------------------------------------
##
##          #--------------------------------------------------
##          # EDR Dump
##          #--------------------------------------------------
##          EdrDump_post
##          {
##            ModuleName = FCT_EdrDump
##            Module
##            {
##              Active = False
##              FileName = ./data/dump/RERATE_post.txt
##            }
##          }
##----------------------------------------------------------------------

          } # END FunctionPool
        } # END Rating 
      } # END Functions

      #--------------------------------------------------
      # Output Section
      #--------------------------------------------------
      Output
      {
        WriteDefaultEdr            = False

        MaxErrorRates
        {
        }

        #-------------------------------------------
        # Multithreaded writing. This is recommended
        # when EDRs are associated with multiple
        # output streams.
        #------------------------------------------
        MultiThreading
        {
           Active = False      # Defaults to False
           NumberOfThreads = 1 # Number of threads spawned. Defaults to 1
           BatchSize = 0       # The number of EDRs cached before sent for writing. Defaults to 0
        }

        OutputCollection
        {
          #--------------------------------------------------------------------
          # The /service/gsm/telephony output stream
          #--------------------------------------------------------------------
          TELOutput
          {
            ModuleName = OUT_GenericStream

            ProcessType = RERATING_PIPELINE
            EventType = /event/delayed/session/telco/gsm

            Module
            {
              Grammar = ./formatDesc/Formats/Solution42/V670_EVENT_LOADER_OutGrammar.dsc
              DeleteEmptyStream = True #defaults to true

              OutputStream
              {
                ModuleName = EXT_OutFileManager
                Module
                {
                  OutputPath = ./data/rerate/out/gsm/telephony
                  OutputPrefix = test_TEL
                  OutputSuffix = .out
                  TempPrefix   = .

                  TempDataPath    = ./data/rerate/out/gsm/telephony
                  TempDataPrefix  = tel.tmp.
                  TempDataSuffix  = .data

                  Replace = TRUE
                }
              }
            }
          } # end of TELOutput

          CONV_TELOutput
          {
            ModuleName = OUT_GenericStream

            ProcessType = RERATING_PIPELINE
            EventType = /event/delayed/session/telco/gsm
            ObjectCacheType = CONVERGENT

            Module
            {
              Grammar = ./formatDesc/Formats/Solution42/V670_EVENT_LOADER_OutGrammar.dsc
              DeleteEmptyStream = True #defaults to true

              OutputStream
              {
                ModuleName = EXT_OutFileManager
                Module
                {
                  OutputPath = ./data/rerate/out/gsm/telephony
                  OutputPrefix = test_CONV_TEL
                  OutputSuffix = .out
                  TempPrefix   = .

                  TempDataPath    = ./data/rerate/out/gsm/telephony
                  TempDataPrefix  = CONV_tel.tmp.
                  TempDataSuffix  = .data

                  Replace = TRUE
                }
              }
            }
          } # end of CONV_TELOutput

          #--------------------------------------------------------------------
          # The /service/ip/gprs output stream
          #--------------------------------------------------------------------
          GPRSIPOutput
          {
            ModuleName = OUT_GenericStream

            ProcessType = RERATING_PIPELINE
            EventType = /event/delayed/session/gprs

            Module
            {
              Grammar = ./formatDesc/Formats/Solution42/V670_EVENT_LOADER_OutGrammar.dsc
              DeleteEmptyStream = True #defaults to true

              OutputStream
              {
                ModuleName = EXT_OutFileManager
                Module
                {
                  OutputPath = ./data/rerate/out/gprs
                  OutputPrefix = test_GPRSIP
                  OutputSuffix = .out
                  TempPrefix   = .

                  TempDataPath    = ./data/rerate/out/gprs
                  TempDataPrefix  = gprs_ip.tmp.
                  TempDataSuffix  = .data

                  Replace = TRUE
                }
              }
            }
          } # end of GPRSIPOutput

          CONV_GPRSIPOutput
          {
            ModuleName = OUT_GenericStream

            ProcessType = RERATING_PIPELINE
            EventType = /event/delayed/session/gprs
            ObjectCacheType = CONVERGENT

            Module
            {
              Grammar = ./formatDesc/Formats/Solution42/V670_EVENT_LOADER_OutGrammar.dsc
              DeleteEmptyStream = True #defaults to true

              OutputStream
              {
                ModuleName = EXT_OutFileManager
                Module
                {
                  OutputPath = ./data/rerate/out/gprs
                  OutputPrefix = test_CONV_GPRSIP
                  OutputSuffix = .out
                  TempPrefix   = .

                  TempDataPath    = ./data/rerate/out/gprs
                  TempDataPrefix  = CONV_gprs_ip.tmp.
                  TempDataSuffix  = .data

                  Replace = TRUE
                }
              }
            }
          } # end of CONV_GPRSIPOutput

	  #--------------------------------------------------------------------
          # The /service/telco/gprs output stream
          #--------------------------------------------------------------------
          GPRSTELCOOutput
          {
            ModuleName = OUT_GenericStream

            ProcessType = RATING_PIPELINE
            EventType = /event/delayed/session/telco/gprs

            Module
            {
              Grammar = ./formatDesc/Formats/Solution42/V670_EVENT_LOADER_OutGrammar.dsc
              DeleteEmptyStream = True # defaults to TRUE

              OutputStream
              {
                ModuleName = EXT_OutFileManager
                Module
                {
                  OutputPath = ./data/rerate/out/gprs
                  OutputPrefix = test_GPRSTELCO
                  OutputSuffix = .out
                  TempPrefix   = .

                  TempDataPath    = ./data/out/gprs
                  TempDataPrefix  = gprs_telco.tmp.
                  TempDataSuffix  = .data

                  Replace = TRUE
                }
              }
            }
          } # end of GPRSTELCOOutput

          CONV_GPRSTELCOOutput
          {
            ModuleName = OUT_GenericStream

            ProcessType = RATING_PIPELINE
            EventType = /event/delayed/session/telco/gprs
            ObjectCacheType = CONVERGENT

            Module
            {
              Grammar = ./formatDesc/Formats/Solution42/V670_EVENT_LOADER_OutGrammar.dsc
              DeleteEmptyStream = True # defaults to TRUE

              OutputStream
              {
                ModuleName = EXT_OutFileManager
                Module
                {
                  OutputPath = ./data/rerate/out/gprs
                  OutputPrefix = test_CONV_GPRSTELCO
                  OutputSuffix = .out
                  TempPrefix   = .

                  TempDataPath    = ./data/out/gprs
                  TempDataPrefix  = CONV_gprs_telco.tmp.
                  TempDataSuffix  = .data

                  Replace = TRUE
                }
              }
            }
          } # end of CONV_GPRSTELCOOutput

          #--------------------------------------------------------------------
          # The /service/gsm/fax output stream
          #--------------------------------------------------------------------
          FAXOutput
          {
            ModuleName = OUT_GenericStream

            ProcessType = RERATING_PIPELINE
            EventType = /event/delayed/session/telco/gsm

            Module
            {
              Grammar = ./formatDesc/Formats/Solution42/V670_EVENT_LOADER_OutGrammar.dsc
              DeleteEmptyStream = True #defaults to true

              OutputStream
              {
                ModuleName = EXT_OutFileManager
                Module
                {
                  OutputPath = ./data/rerate/out/gsm/fax
                  OutputPrefix = test_FAX
                  OutputSuffix = .out
                  TempPrefix   = .

                  TempDataPath    = ./data/rerate/out/gsm/fax
                  TempDataPrefix  = fax.tmp.
                  TempDataSuffix  = .data

                  Replace = TRUE
                }
              }
            }
          } # end of FaxOutput

          CONV_FAXOutput
          {
            ModuleName = OUT_GenericStream

            ProcessType = RERATING_PIPELINE
            EventType = /event/delayed/session/telco/gsm
            ObjectCacheType = CONVERGENT

            Module
            {
              Grammar = ./formatDesc/Formats/Solution42/V670_EVENT_LOADER_OutGrammar.dsc
              DeleteEmptyStream = True #defaults to true

              OutputStream
              {
                ModuleName = EXT_OutFileManager
                Module
                {
                  OutputPath = ./data/rerate/out/gsm/fax
                  OutputPrefix = test_CONV_FAX
                  OutputSuffix = .out
                  TempPrefix   = .

                  TempDataPath    = ./data/rerate/out/gsm/fax
                  TempDataPrefix  = CONV_fax.tmp.
                  TempDataSuffix  = .data

                  Replace = TRUE
                }
              }
            }
          } # end of CONV_FaxOutput
          
          #--------------------------------------------------------------------
          # The /service/sms output stream
          #--------------------------------------------------------------------
          SMSOutput
          {
            ModuleName = OUT_GenericStream

            ProcessType = RERATING_PIPELINE
            EventType = /event/delayed/session/telco/gsm

            Module
            {
              Grammar = ./formatDesc/Formats/Solution42/V670_EVENT_LOADER_OutGrammar.dsc
              DeleteEmptyStream = True #defaults to true

              OutputStream
              {
                ModuleName = EXT_OutFileManager
                Module
                {
                  OutputPath = ./data/rerate/out/gsm/sms
                  OutputPrefix = test_SMS
                  OutputSuffix = .out
                  TempPrefix   = .

                  TempDataPath    = ./data/rerate/out/gsm/sms
                  TempDataPrefix  = sms.tmp.
                  TempDataSuffix  = .data

                  Replace = TRUE
                }
              }
            }
          } # end of SMSOutput

          CONV_SMSOutput
          {
            ModuleName = OUT_GenericStream

            ProcessType = RERATING_PIPELINE
            EventType = /event/delayed/session/telco/gsm
            ObjectCacheType = CONVERGENT

            Module
            {
              Grammar = ./formatDesc/Formats/Solution42/V670_EVENT_LOADER_OutGrammar.dsc
              DeleteEmptyStream = True #defaults to true

              OutputStream
              {
                ModuleName = EXT_OutFileManager
                Module
                {
                  OutputPath = ./data/rerate/out/gsm/sms
                  OutputPrefix = test_CONV_SMS
                  OutputSuffix = .out
                  TempPrefix   = .

                  TempDataPath    = ./data/rerate/out/gsm/sms
                  TempDataPrefix  = CONV_sms.tmp.
                  TempDataSuffix  = .data

                  Replace = TRUE
                }
              }
            }
          } # end of CONV_SMSOutput
          
          #--------------------------------------------------------------------
          # The /service/wap output stream
          #--------------------------------------------------------------------
          WAPOutput
          {
            ModuleName = OUT_GenericStream

            ProcessType = RERATING_PIPELINE
            EventType = /event/delayed/activity/wap/interactive

            Module
            {
              Grammar = ./formatDesc/Formats/Solution42/V670_EVENT_LOADER_OutGrammar.dsc
              DeleteEmptyStream = True #defaults to true

              OutputStream
              {
                ModuleName = EXT_OutFileManager
                Module
                {
                  OutputPath = ./data/rerate/out/wap
                  OutputPrefix = test_WAP
                  OutputSuffix = .out
                  TempPrefix   = .

                  TempDataPath    = ./data/rerate/out/wap
                  TempDataPrefix  = wap.tmp.
                  TempDataSuffix  = .data

                  Replace = TRUE
                }
              }
            }
          } # end of WAPOutput          

          CONV_WAPOutput
          {
            ModuleName = OUT_GenericStream

            ProcessType = RERATING_PIPELINE
            EventType = /event/delayed/activity/wap/interactive
            ObjectCacheType = CONVERGENT

            Module
            {
              Grammar = ./formatDesc/Formats/Solution42/V670_EVENT_LOADER_OutGrammar.dsc
              DeleteEmptyStream = True #defaults to true

              OutputStream
              {
                ModuleName = EXT_OutFileManager
                Module
                {
                  OutputPath = ./data/rerate/out/wap
                  OutputPrefix = test_CONV_WAP
                  OutputSuffix = .out
                  TempPrefix   = .

                  TempDataPath    = ./data/rerate/out/wap
                  TempDataPrefix  = CONV_wap.tmp.
                  TempDataSuffix  = .data

                  Replace = TRUE
                }
              }
            }
          } # end of CONV_WAPOutput
 
          #--------------------------------------------------------------------
          # SuspenseCreateOutput stream
          #--------------------------------------------------------------------
          SuspenseCreateOutput
          {
            ModuleName = OUT_GenericStream
            EventType = /suspended_usage
            Module
            {
              Grammar = ./formatDesc/Formats/SuspenseHandling/SuspendedUsageCreationGrammar.dsc
              DeleteEmptyStream = True
              OutputStream
              {
                ModuleName = EXT_OutFileManager
                Module
                {
                  OutputPath = ./data/rerate/reject
                  OutputPrefix = suspense_create_
                  OutputSuffix = .out
                  TempPrefix = tmp
                  TempDataPath = ./data/rerate/reject
                  TempDataPrefix = susp.create.tmp.
                  TempDataSuffix = .data
                  Replace = True
                  AppendSequenceNumber = False
                }
              }
            }
          } # end of SuspenseCreateOutput

          #--------------------------------------------------------------------
          # SuspenseUpdateOutput stream
          #--------------------------------------------------------------------
          SuspenseUpdateOutput
          {
            ModuleName = OUT_GenericStream
            EventType = /tmp_suspended_usage

            Module
            {
              Grammar = ./formatDesc/Formats/SuspenseHandling/SuspendedUsageUpdateGrammar.dsc
              DeleteEmptyStream = True

              OutputStream
              {
                ModuleName = EXT_OutFileManager
                Module
                {
                  OutputPath = ./data/rerate/reject
                  OutputPrefix = suspense_update_
                  OutputSuffix = .out
                  TempPrefix = tmp
                  TempDataPath = ./data/rerate/reject
                  TempDataPrefix = susp.update.tmp.
                  TempDataSuffix = .data
                  Replace = True
                  AppendSequenceNumber = False
                }
              }
            }
          } # end of SuspenseUpdateOutput
          
        } # end of OutputCollection

        OutputLog
        {
          FilePath        = ./data/rerate/log/stream
          FileName        = stream
          FilePrefix      = Stream_
          FileSuffix      = .log

          SuppressErrors
          {
            ERR_SPEC_VERSION_INVALID
            ERR_RELEASE_VERSION_INVALID
          }
        }
        
        SequenceGeneration = Unit

        #-------------------------------
        EdrTraceEnabled = False
        EdrTrace
        {
            TraceLog
            {
                 FilePath   = ./log/edrLog
                 FileName   = edrTraceLog
                 FilePrefix = log_
                 FileSuffix = .log
            }

            TraceStartPoint =  Input
            TraceEndPoint   = Output

        } # END EdrTrace


      } # end of Output

    }  # END ALL_RERATE

  } # END Pipelines

} # END ifw
